2025-07-11 13:51:24,755 - __main__                  - INFO     - [진단] main.py: main() 진입
2025-07-11 13:51:28,412 - __main__                  - INFO     - S-Class 설정 완료: {'input_source': 0, 'user_id': 'default', 'camera_position': <CameraPosition.REARVIEW_MIRROR: '백미러 위치'>, 'enable_calibration': False, 'is_same_driver': True, 'system_type': <AnalysisSystemType.STANDARD: 'standard'>, 'use_legacy_engine': False, 'sclass_features': {'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}}
2025-07-11 13:51:28,419 - app                       - INFO     - [진단] app.py: DMSApp.__init__ 진입
2025-07-11 13:51:28,419 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - input_source=0
2025-07-11 13:51:28,419 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.input_source=0
2025-07-11 13:51:28,420 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - user_id=default
2025-07-11 13:51:28,420 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.user_id=default
2025-07-11 13:51:28,421 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - camera_position=백미러 위치
2025-07-11 13:51:28,421 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.camera_position=백미러 위치
2025-07-11 13:51:28,422 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - enable_calibration=False
2025-07-11 13:51:28,422 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.enable_calibration=False
2025-07-11 13:51:28,422 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - is_same_driver=True
2025-07-11 13:51:28,423 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.is_same_driver=True
2025-07-11 13:51:28,423 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - system_type=AnalysisSystemType.STANDARD
2025-07-11 13:51:28,424 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.system_type=AnalysisSystemType.STANDARD
2025-07-11 13:51:28,424 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - use_legacy_engine=False
2025-07-11 13:51:28,425 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.use_legacy_engine=False
2025-07-11 13:51:28,426 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 13:51:28,428 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 13:51:28,429 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.running=False
2025-07-11 13:51:28,430 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.paused=False
2025-07-11 13:51:28,430 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.current_processed_frame=None
2025-07-11 13:51:28,431 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.initialization_completed=False
2025-07-11 13:51:28,431 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.safe_mode=False
2025-07-11 13:51:28,432 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.error_count=0
2025-07-11 13:51:28,432 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - S-Class 시스템 초기화 시작
2025-07-11 13:51:28,433 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:51:28,434 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.performance_monitor=<systems.performance.PerformanceOptimizer object at 0x0000020AEBE86D50>
2025-07-11 13:51:28,435 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:51:28,435 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.personalization_engine=<systems.personalization.PersonalizationEngine object at 0x0000020AED6252D0>
2025-07-11 13:51:28,436 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:51:28,436 - systems.dynamic           - INFO     - DynamicAnalysisEngine 초기화 완료
2025-07-11 13:51:28,436 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.dynamic_analysis=<systems.dynamic.DynamicAnalysisEngine object at 0x0000020ACF2FA790>
2025-07-11 13:51:28,438 - systems.backup            - INFO     - SensorBackupManager 초기화 완료
2025-07-11 13:51:28,439 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.backup_manager=<systems.backup.SensorBackupManager object at 0x0000020AED66D210>
2025-07-11 13:51:28,440 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.calibration_manager=<io_handler.video_input.MultiVideoCalibrationManager object at 0x0000020AEBE7CD90>
2025-07-11 13:51:28,441 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - 캘리브레이션 매니저 초기화 완료
2025-07-11 13:51:28,442 - app                       - INFO     - [진단] app.py: run 진입
2025-07-11 13:51:28,442 - app                       - INFO     - [진단] app.py: run - asyncio import 완료
2025-07-11 13:51:28,443 - app                       - INFO     - [진단] app.py: run - frame_queue 생성, maxsize=5
2025-07-11 13:51:28,443 - app                       - INFO     - [진단] app.py: run - stop_event 생성
2025-07-11 13:51:28,444 - app                       - INFO     - [진단] app.py: run - display_thread 생성
2025-07-11 13:51:28,446 - app                       - INFO     - [진단] app.py: run - opencv_display_loop 진입
2025-07-11 13:51:28,447 - app                       - INFO     - [진단] app.py: run - display_thread 시작
2025-07-11 13:51:28,447 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame=None 초기화
2025-07-11 13:51:28,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:28,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer 진입
2025-07-11 13:51:28,450 - app                       - INFO     - [진단] app.py: initialize 진입
2025-07-11 13:51:28,450 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 초기화 시작...
2025-07-11 13:51:28,450 - app                       - INFO     - [진단] app.py: initialize - self.state_manager=<core.state_manager.EnhancedStateManager object at 0x0000020AED66CF90>
2025-07-11 13:51:28,451 - systems.metrics_manager   - INFO     - MetricsManager 초기화 완료 - 히스토리 크기: 900
2025-07-11 13:51:28,453 - integration.integrated_system - INFO     - 새로운 시스템 초기화 시작 - 성능 우선 전략
2025-07-11 13:51:28,453 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 시작: standard
2025-07-11 13:51:28,456 - analysis.factory.analysis_factory - INFO     - 지원 기능: advanced_drowsiness_detection, multi_level_distraction_detection, precise_head_pose_tracking, gaze_zone_classification, emotion_recognition...
2025-07-11 13:51:28,457 - analysis.factory.analysis_factory - INFO     - 표준 성능 DMS 시스템 생성 중...
2025-07-11 13:51:28,459 - analysis.fusion.fusion_engine_advanced - INFO     - MultiModalFusionEngine (S-Class) 초기화 완료 - 디지털 신경과학자 준비됨
2025-07-11 13:51:28,545 - analysis.drowsiness       - INFO     - EnhancedDrowsinessDetector 초기화 완료
2025-07-11 13:51:28,545 - analysis.emotion          - INFO     - EmotionRecognitionSystem 초기화 완료
2025-07-11 13:51:28,546 - analysis.gaze             - INFO     - EnhancedSphericalGazeClassifier 초기화: 11개 구역 정의됨
2025-07-11 13:51:28,547 - analysis.identity         - INFO     - 1명의 운전자 프로필 로드됨
2025-07-11 13:51:28,547 - analysis.identity         - INFO     - DriverIdentificationSystem 초기화 완료
2025-07-11 13:51:28,547 - analysis.processors.face_processor_s_class - INFO     - FaceDataProcessor (S-Class) 초기화 완료 - 디지털 심리학자 준비됨
2025-07-11 13:51:28,547 - analysis.processors.pose_processor_s_class - INFO     - PoseDataProcessor (S-Class) 초기화 완료 - 자세 분석 전문가 준비됨
2025-07-11 13:51:28,547 - analysis.processors.hand_processor_s_class - INFO     - HandDataProcessor (S-Class, 인터페이스 통합) 초기화 완료
2025-07-11 13:51:28,547 - analysis.processors.object_processor_s_class - INFO     - ObjectDataProcessor (S-Class) 초기화 완료 - 행동 예측 전문가 준비됨
2025-07-11 13:51:28,547 - analysis.orchestrator.orchestrator_advanced - INFO     - AnalysisOrchestrator (S-Class) 초기화 완료 - 지능형 지휘자 준비됨
2025-07-11 13:51:28,547 - analysis.factory.analysis_factory - INFO     - 표준 DMS 시스템 생성 완료 - 균형 모드 활성화
2025-07-11 13:51:28,547 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 완료: standard
2025-07-11 13:51:28,547 - integration.integrated_system - INFO     - ✅ 새로운 standard 시스템 생성 완료
2025-07-11 13:51:28,547 - integration.integrated_system - INFO     - IntegratedDMSSystem 초기화 완료 - 타입: standard, 레거시: False
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: initialize - self.integrated_system=<integration.integrated_system.IntegratedDMSSystem object at 0x0000020AEBE874D0>
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 await 전
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: _initialize_async_components 진입
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks 리스트 생성 전
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks=[<coroutine object IntegratedDMSSystem.initialize at 0x0000020AED812330>, <coroutine object PersonalizationEngine.initialize at 0x0000020AEE3CBD80>, <coroutine object DynamicAnalysisEngine.initialize at 0x0000020AEE3AB920>]
2025-07-11 13:51:28,547 - app                       - INFO     - [진단] app.py: _initialize_async_components - asyncio.gather await 전
2025-07-11 13:51:28,547 - events.event_bus          - INFO     - EventBus 초기화 완료 - 중추 신경계 가동 시작
2025-07-11 13:51:28,547 - events.event_bus          - INFO     - EventBus 시작됨 - 모든 우선순위 큐 처리 시작
2025-07-11 13:51:28,547 - events.event_bus          - INFO     - 글로벌 이벤트 시스템 초기화 완료
2025-07-11 13:51:28,547 - events.handlers           - INFO     - SafetyEventHandler 초기화 완료 - 안전 모니터링 시작
2025-07-11 13:51:28,547 - events.event_bus          - INFO     - 글로벌 핸들러 등록: SafetyEventHandler
2025-07-11 13:51:28,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:28,554 - events.handlers           - INFO     - AnalyticsEventHandler 초기화 완료 - 성능 모니터링 시작
2025-07-11 13:51:28,554 - events.event_bus          - INFO     - 글로벌 핸들러 등록: AnalyticsEventHandler
2025-07-11 13:51:28,555 - systems.metrics_manager   - INFO     - StateManager와 연결됨
2025-07-11 13:51:28,555 - core.state_manager        - INFO     - MetricsManager와 연결됨
2025-07-11 13:51:28,556 - integration.integrated_system - INFO     - IntegratedDMSSystem 비동기 초기화 완료
2025-07-11 13:51:28,557 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:51:28,558 - systems.personalization   - INFO     - PersonalizationEngine for default initialized.
2025-07-11 13:51:28,558 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:51:28,559 - systems.dynamic           - INFO     - DynamicAnalysisEngine for async initialized.
2025-07-11 13:51:28,559 - app                       - INFO     - [진단] app.py: _initialize_async_components - 모든 S-Class 비동기 컴포넌트 초기화 완료
2025-07-11 13:51:28,560 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 완료
2025-07-11 13:51:28,561 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:51:28,561 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/face_landmarker.task에 CPU 모드 적용
2025-07-11 13:51:28,640 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:28,641 - systems.mediapipe_manager - INFO     - ✅ FaceLandmarker 초기화 완료
2025-07-11 13:51:28,641 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:28,641 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/pose_landmarker_full.task에 CPU 모드 적용
2025-07-11 13:51:28,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:28,923 - systems.mediapipe_manager - INFO     - ✅ PoseLandmarker 초기화 완료
2025-07-11 13:51:28,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:28,923 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/hand_landmarker.task에 CPU 모드 적용
2025-07-11 13:51:28,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,063 - systems.mediapipe_manager - INFO     - ✅ HandLandmarker 초기화 완료
2025-07-11 13:51:29,064 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/efficientdet_lite0.tflite에 CPU 모드 적용
2025-07-11 13:51:29,125 - systems.mediapipe_manager - INFO     - ✅ ObjectDetector 초기화 완료
2025-07-11 13:51:29,125 - systems.mediapipe_manager - INFO     - MediaPipe 태스크 초기화 완료: 4/4 성공
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager(더미)=<systems.mediapipe_manager.EnhancedMediaPipeManager object at 0x0000020AEE412450>
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - callback_adapter=<app.SafeOrchestratorCallbackAdapter object at 0x0000020AEE413390>
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager.analysis_engine=<app.SafeOrchestratorCallbackAdapter object at 0x0000020AEE413390>
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 전
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 완료
2025-07-11 13:51:29,125 - app                       - INFO     - [진단] app.py: initialize - self.video_input_manager=<io_handler.video_input.VideoInputManager object at 0x0000020AEE413610>
2025-07-11 13:51:29,125 - io_handler.video_input    - INFO     - VideoInputManager 초기화 시작 - 입력 소스: 0
2025-07-11 13:51:29,137 - io_handler.video_input    - INFO     - 웹캠 모드 - 디바이스 0
2025-07-11 13:51:29,139 - io_handler.video_input    - INFO     - Windows/개발 환경: 표준 웹캠 캡처 사용 (디바이스: 0)
2025-07-11 13:51:29,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,506 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:29,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:29,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:29,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,320 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,320 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,321 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,778 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,778 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,778 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:30,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:30,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:30,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,003 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:31,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:31,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:31,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,288 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,288 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,288 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,752 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,752 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,752 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:32,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:32,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:32,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,320 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:33,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:33,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:33,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:34,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:34,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:34,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,770 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,770 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:35,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:35,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:35,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,118 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,118 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:36,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:36,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:36,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,754 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:37,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:37,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:37,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,219 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,219 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,650 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,650 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,650 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,760 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,760 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,761 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,865 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,865 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,865 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:38,978 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:38,978 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:38,978 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,194 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,194 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,194 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,418 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,418 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,418 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,634 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,634 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,634 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,746 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,852 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,852 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:39,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:39,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:39,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,309 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,309 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,309 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:40,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:40,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:40,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,456 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,484 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,485 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,818 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:41,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:41,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:41,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:42,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:42,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:42,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,787 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:43,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:43,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:43,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,019 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,019 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,019 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,698 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,699 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,699 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:44,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:44,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:44,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,850 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,850 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,850 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:45,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:45,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:45,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,202 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,770 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:46,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:46,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:46,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,594 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,594 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,594 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:47,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:47,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:47,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,753 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,753 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,754 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,870 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:48,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:48,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:48,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:49,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:49,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:49,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:50,968 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:50,968 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:50,968 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,185 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,420 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:51,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:51,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:51,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,578 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,578 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,578 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,368 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,696 - io_handler.video_input    - INFO     - 웹캠 테스트 성공: (480, 640, 3)
2025-07-11 13:51:53,696 - io_handler.video_input    - INFO     - VideoCapture 객체 성공적으로 생성됨
2025-07-11 13:51:53,696 - io_handler.video_input    - INFO     - [진단] VideoCapture backend: MSMF, codec:    , 총 프레임: -1
2025-07-11 13:51:53,698 - io_handler.video_input    - INFO     - 리더 스레드 시작 - 비디오 모드: False
2025-07-11 13:51:53,698 - io_handler.video_input    - INFO     - 리더 스레드 시작 대기 중...
2025-07-11 13:51:53,698 - io_handler.video_input    - INFO     - 비디오 속성 - 해상도: 640x480, FPS: 30.00, 총 프레임: -1
2025-07-11 13:51:53,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,709 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,741 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,783 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,821 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,857 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,897 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,936 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:53,938 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:53,939 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:53,939 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:53,973 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,010 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,051 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:54,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,088 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,124 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,164 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:54,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,172 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,199 - io_handler.video_input    - INFO     - 첫 번째 프레임 대기 중 (최대 5.0초)...
2025-07-11 13:51:54,199 - io_handler.video_input    - INFO     - ✅ 첫 번째 프레임 수신 성공
2025-07-11 13:51:54,199 - io_handler.video_input    - INFO     - ✅ 입력 소스 초기화 및 스레드 시작 완료
2025-07-11 13:51:54,200 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,200 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 v18+ (연구 결과 통합) 초기화 완료
2025-07-11 13:51:54,202 - app                       - INFO     - [진단] app.py: initialize - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 13:51:54,202 - app                       - INFO     - [진단] app.py: initialize - self.initialization_completed=True
2025-07-11 13:51:54,202 - app                       - INFO     - [진단] app.py: run - S-Class DMS 시스템 초기화 완료
2025-07-11 13:51:54,203 - app                       - INFO     - [진단] app.py: run - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 13:51:54,203 - app                       - INFO     - [진단] app.py: run - S-Class DMS v18+ 시스템 시작 안내
2025-07-11 13:51:54,238 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,274 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,289 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:51:54,289 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,306 - app                       - INFO     - [진단] app.py: run - 초기 대기 완료
2025-07-11 13:51:54,306 - app                       - INFO     - [진단] app.py: run - frame_count 초기화: 0
2025-07-11 13:51:54,307 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=0
2025-07-11 13:51:54,307 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,313 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,314 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,315 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,316 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,316 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 1
2025-07-11 13:51:54,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,318 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,320 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,320 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=1
2025-07-11 13:51:54,321 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,323 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,324 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,325 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,325 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,326 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,326 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,327 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,328 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,328 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 2
2025-07-11 13:51:54,342 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,342 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=2
2025-07-11 13:51:54,343 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,345 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,346 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,346 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,347 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,347 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,348 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,348 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,349 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,349 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 3
2025-07-11 13:51:54,354 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,360 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,360 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=3
2025-07-11 13:51:54,361 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,413 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,413 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 4
2025-07-11 13:51:54,423 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,424 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=4
2025-07-11 13:51:54,424 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,477 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,478 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,479 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,479 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,479 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,480 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,480 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,480 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,481 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,481 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 5
2025-07-11 13:51:54,483 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,483 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=5
2025-07-11 13:51:54,484 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,492 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,494 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,506 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,508 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,508 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,510 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,525 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,526 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,528 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,529 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,541 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,541 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,544 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,547 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,548 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,549 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,549 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,551 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,552 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,553 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,554 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 6
2025-07-11 13:51:54,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,572 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,575 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,576 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=6
2025-07-11 13:51:54,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,577 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,578 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,579 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,591 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,604 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,604 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,610 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,612 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,612 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,613 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,613 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,616 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,617 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 7
2025-07-11 13:51:54,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,624 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=7
2025-07-11 13:51:54,630 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,640 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,644 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,669 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,672 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,673 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,676 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,678 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,679 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,679 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,680 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,680 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,680 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 8
2025-07-11 13:51:54,681 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,682 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,688 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,694 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=8
2025-07-11 13:51:54,695 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,735 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,736 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,736 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,736 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,736 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,736 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,736 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,738 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,739 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,739 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 9
2025-07-11 13:51:54,740 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,753 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,753 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,792 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=9
2025-07-11 13:51:54,817 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,820 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,844 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,861 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,887 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,895 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,896 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,897 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,899 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,899 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,900 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 10
2025-07-11 13:51:54,901 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:54,915 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:54,915 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:54,932 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:54,943 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=10
2025-07-11 13:51:54,944 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:54,957 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:54,982 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:54,983 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:54,983 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:54,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:54,984 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:54,985 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:54,985 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:54,986 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:54,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:54,986 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 11
2025-07-11 13:51:54,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:54,992 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,005 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,014 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=11
2025-07-11 13:51:55,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,043 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,044 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,047 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,049 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,050 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,051 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,051 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,051 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,051 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,052 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 12
2025-07-11 13:51:55,052 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,063 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=12
2025-07-11 13:51:55,065 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,068 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,070 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,075 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,076 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,077 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,077 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,079 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,080 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 13
2025-07-11 13:51:55,080 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,081 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,083 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,084 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=13
2025-07-11 13:51:55,085 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,101 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,103 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,103 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,108 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,109 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,111 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,112 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,112 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 14
2025-07-11 13:51:55,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,114 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,118 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,121 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,123 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=14
2025-07-11 13:51:55,123 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,132 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,133 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,166 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,168 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,181 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,181 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,183 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,192 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,192 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 15
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,196 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=15
2025-07-11 13:51:55,202 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,212 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,213 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,245 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,247 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 16
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=16
2025-07-11 13:51:55,253 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,260 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,262 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,306 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,307 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,310 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,311 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,313 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,313 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,314 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,314 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 17
2025-07-11 13:51:55,314 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,315 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,316 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=17
2025-07-11 13:51:55,316 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,333 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,333 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,368 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,368 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,368 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,368 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,369 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,369 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,370 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,370 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 18
2025-07-11 13:51:55,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,390 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,390 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=18
2025-07-11 13:51:55,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,392 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,435 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,435 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 19
2025-07-11 13:51:55,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,463 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,464 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=19
2025-07-11 13:51:55,464 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,465 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,500 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,501 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 20
2025-07-11 13:51:55,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=20
2025-07-11 13:51:55,507 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,529 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,530 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,564 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,564 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,564 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,564 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,566 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,566 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,566 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,566 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 21
2025-07-11 13:51:55,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,568 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=21
2025-07-11 13:51:55,571 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,643 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,643 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,643 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,643 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,645 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 22
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,645 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,650 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,650 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=22
2025-07-11 13:51:55,650 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,704 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,704 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,712 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,713 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,713 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,713 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 23
2025-07-11 13:51:55,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,733 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,733 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,734 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=23
2025-07-11 13:51:55,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,735 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,769 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,772 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,772 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,772 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,772 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,778 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,779 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,779 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,779 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,780 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 24
2025-07-11 13:51:55,780 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,781 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,797 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,797 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,798 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=24
2025-07-11 13:51:55,798 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,833 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,834 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,834 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,835 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 25
2025-07-11 13:51:55,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,840 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,840 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=25
2025-07-11 13:51:55,840 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,899 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,899 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,899 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,900 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,900 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,900 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,901 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,901 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,901 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,901 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 26
2025-07-11 13:51:55,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:55,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=26
2025-07-11 13:51:55,928 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,965 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:55,966 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 27
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:55,966 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:55,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:55,972 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=27
2025-07-11 13:51:55,972 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:55,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:55,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,031 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,044 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,044 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,045 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,045 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,045 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,046 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,046 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,046 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,047 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,047 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 28
2025-07-11 13:51:56,047 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,048 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,053 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,055 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=28
2025-07-11 13:51:56,055 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,069 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,069 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,104 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,104 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,108 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,108 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,108 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,111 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,113 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,113 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,113 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 29
2025-07-11 13:51:56,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,114 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,133 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,133 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,134 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=29
2025-07-11 13:51:56,134 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,134 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,168 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,168 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,168 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,170 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,170 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,170 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,170 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,173 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 30
2025-07-11 13:51:56,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,187 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,188 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=30
2025-07-11 13:51:56,188 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,234 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,235 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,235 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,236 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,236 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,237 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 31
2025-07-11 13:51:56,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,246 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=31
2025-07-11 13:51:56,248 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,262 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,264 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,299 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,300 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,301 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 32
2025-07-11 13:51:56,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,303 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=32
2025-07-11 13:51:56,304 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,327 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,329 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,364 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,366 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,366 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,366 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,367 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 33
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=33
2025-07-11 13:51:56,369 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,434 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,443 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,446 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,447 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,447 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,447 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,447 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 34
2025-07-11 13:51:56,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,449 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=34
2025-07-11 13:51:56,450 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,503 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,508 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,508 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,508 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,508 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 35
2025-07-11 13:51:56,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,531 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,531 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,531 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,531 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=35
2025-07-11 13:51:56,531 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,568 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 36
2025-07-11 13:51:56,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,574 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,576 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,576 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=36
2025-07-11 13:51:56,578 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,597 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,597 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,634 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,634 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,636 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,636 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,637 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,637 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 37
2025-07-11 13:51:56,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=37
2025-07-11 13:51:56,645 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,662 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,663 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,700 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,700 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 38
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,709 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,710 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=38
2025-07-11 13:51:56,710 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,728 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,729 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,766 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,766 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,768 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,768 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,769 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,769 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,770 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 39
2025-07-11 13:51:56,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,775 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,775 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=39
2025-07-11 13:51:56,778 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,795 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,796 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,835 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,845 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,845 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,845 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,845 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,845 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,848 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,849 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,849 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 40
2025-07-11 13:51:56,850 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,851 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,871 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,871 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,874 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=40
2025-07-11 13:51:56,875 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,907 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,910 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,910 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,911 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,912 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,912 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 41
2025-07-11 13:51:56,912 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,913 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,914 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,915 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,915 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=41
2025-07-11 13:51:56,916 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:56,931 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,931 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:56,970 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:56,970 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:56,971 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 42
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:56,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:56,998 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:56,998 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:56,999 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=42
2025-07-11 13:51:56,999 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,000 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,035 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,036 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,036 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,037 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 43
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,043 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,043 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=43
2025-07-11 13:51:57,044 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,100 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,100 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,100 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,100 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,102 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,102 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,103 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,103 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,104 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,104 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 44
2025-07-11 13:51:57,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,109 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,109 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=44
2025-07-11 13:51:57,112 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,129 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,165 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,167 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,167 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,168 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,168 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,168 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 45
2025-07-11 13:51:57,169 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,169 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=45
2025-07-11 13:51:57,175 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,195 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,196 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,230 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,232 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,232 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,233 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,233 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,233 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,233 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 46
2025-07-11 13:51:57,234 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,234 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,235 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,237 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,237 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=46
2025-07-11 13:51:57,238 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,306 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 47
2025-07-11 13:51:57,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,312 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,312 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,334 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,334 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,335 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=47
2025-07-11 13:51:57,335 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,336 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,371 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,374 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,374 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,374 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,376 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,377 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,377 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 48
2025-07-11 13:51:57,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,385 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,385 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=48
2025-07-11 13:51:57,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,387 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,435 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,435 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 49
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=49
2025-07-11 13:51:57,446 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,462 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,500 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,501 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 50
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=50
2025-07-11 13:51:57,510 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,565 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,565 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,568 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 51
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=51
2025-07-11 13:51:57,572 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,630 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,630 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,630 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,630 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,630 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,633 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,633 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,633 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,633 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,634 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 52
2025-07-11 13:51:57,634 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,636 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,661 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,661 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,661 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=52
2025-07-11 13:51:57,663 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,663 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,706 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 53
2025-07-11 13:51:57,706 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,713 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,713 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=53
2025-07-11 13:51:57,716 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,770 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,774 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,774 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,774 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,774 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,776 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,776 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,777 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 54
2025-07-11 13:51:57,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,778 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,798 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,800 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=54
2025-07-11 13:51:57,801 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,835 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,836 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 55
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,845 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,845 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=55
2025-07-11 13:51:57,846 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,862 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,863 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,900 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,901 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,901 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 56
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,908 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,908 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=56
2025-07-11 13:51:57,908 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,928 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,928 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:57,966 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:57,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:57,966 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:57,967 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 57
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:57,967 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:57,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:57,973 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=57
2025-07-11 13:51:57,973 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:57,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:57,995 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,028 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,028 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,028 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,028 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,028 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,032 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,032 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,032 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,032 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,033 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 58
2025-07-11 13:51:58,033 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,034 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,055 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,056 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=58
2025-07-11 13:51:58,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,057 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,094 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,141 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 59
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,157 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=59
2025-07-11 13:51:58,157 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,159 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,169 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,171 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,171 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,172 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,174 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 60
2025-07-11 13:51:58,174 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,176 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,189 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=60
2025-07-11 13:51:58,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,191 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,234 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,234 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,234 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,237 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 61
2025-07-11 13:51:58,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,239 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,241 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,241 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=61
2025-07-11 13:51:58,242 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,257 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,298 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,298 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,301 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,301 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 62
2025-07-11 13:51:58,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,304 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,304 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=62
2025-07-11 13:51:58,305 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,310 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,311 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,365 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,367 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 63
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,376 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=63
2025-07-11 13:51:58,376 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,428 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,430 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,430 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,432 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 64
2025-07-11 13:51:58,432 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,433 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,433 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,438 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,439 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,439 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=64
2025-07-11 13:51:58,441 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,497 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,537 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,539 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 65
2025-07-11 13:51:58,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,545 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,557 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,557 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=65
2025-07-11 13:51:58,558 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,558 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,569 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,571 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,572 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,573 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,574 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,575 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 66
2025-07-11 13:51:58,576 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,576 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,577 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=66
2025-07-11 13:51:58,578 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,591 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,634 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,636 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 67
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,636 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=67
2025-07-11 13:51:58,643 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,699 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,699 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,700 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 68
2025-07-11 13:51:58,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,708 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=68
2025-07-11 13:51:58,709 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,765 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,765 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,765 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,765 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,765 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,765 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,768 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,768 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,768 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,768 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 69
2025-07-11 13:51:58,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:51:58,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,774 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:51:58,775 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=69
2025-07-11 13:51:58,775 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:51:58,776 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:51:58,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:51:58,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:51:58,781 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 113
2025-07-11 13:51:58,781 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 'q' 입력, stop_event.set() 및 break
2025-07-11 13:51:58,796 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - OpenCV 창 종료
2025-07-11 13:51:58,834 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:51:58,834 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:51:58,834 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:51:58,834 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:51:58,834 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:51:58,834 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:51:58,838 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:51:58,840 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:51:58,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:51:58,843 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 70
2025-07-11 13:51:58,847 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:51:58,847 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 종료 시 frame_queue에 None 삽입
2025-07-11 13:51:58,847 - events.event_bus          - INFO     - CRITICAL 우선순위 큐 처리 취소됨
2025-07-11 13:51:58,847 - events.event_bus          - INFO     - MEDIUM 우선순위 큐 처리 취소됨
2025-07-11 13:51:58,847 - events.event_bus          - INFO     - EMERGENCY 우선순위 큐 처리 취소됨
2025-07-11 13:51:58,847 - events.event_bus          - INFO     - HIGH 우선순위 큐 처리 취소됨
2025-07-11 13:51:58,847 - events.event_bus          - INFO     - LOW 우선순위 큐 처리 취소됨
2025-07-11 13:51:58,847 - app                       - INFO     - [진단] app.py: run - asyncio.run(async_frame_producer()) 완료
2025-07-11 13:51:58,847 - app                       - INFO     - [진단] app.py: run - stop_event.set() 호출
2025-07-11 13:51:58,847 - app                       - INFO     - [진단] app.py: run - display_thread.join() 완료
