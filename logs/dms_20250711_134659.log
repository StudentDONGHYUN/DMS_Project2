2025-07-11 13:47:13,682 - __main__                  - INFO     - [진단] main.py: main() 진입
2025-07-11 13:47:18,148 - __main__                  - INFO     - S-Class 설정 완료: {'input_source': 0, 'user_id': 'default', 'camera_position': <CameraPosition.REARVIEW_MIRROR: '백미러 위치'>, 'enable_calibration': False, 'is_same_driver': True, 'system_type': <AnalysisSystemType.STANDARD: 'standard'>, 'use_legacy_engine': False, 'sclass_features': {'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}}
2025-07-11 13:47:18,155 - app                       - INFO     - [진단] app.py: DMSApp.__init__ 진입
2025-07-11 13:47:18,155 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - input_source=0
2025-07-11 13:47:18,155 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.input_source=0
2025-07-11 13:47:18,156 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - user_id=default
2025-07-11 13:47:18,156 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.user_id=default
2025-07-11 13:47:18,156 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - camera_position=백미러 위치
2025-07-11 13:47:18,156 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.camera_position=백미러 위치
2025-07-11 13:47:18,157 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - enable_calibration=False
2025-07-11 13:47:18,158 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.enable_calibration=False
2025-07-11 13:47:18,158 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - is_same_driver=True
2025-07-11 13:47:18,159 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.is_same_driver=True
2025-07-11 13:47:18,159 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - system_type=AnalysisSystemType.STANDARD
2025-07-11 13:47:18,159 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.system_type=AnalysisSystemType.STANDARD
2025-07-11 13:47:18,160 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - use_legacy_engine=False
2025-07-11 13:47:18,160 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.use_legacy_engine=False
2025-07-11 13:47:18,161 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 13:47:18,161 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 13:47:18,162 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.running=False
2025-07-11 13:47:18,163 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.paused=False
2025-07-11 13:47:18,163 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.current_processed_frame=None
2025-07-11 13:47:18,164 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.initialization_completed=False
2025-07-11 13:47:18,164 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.safe_mode=False
2025-07-11 13:47:18,165 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.error_count=0
2025-07-11 13:47:18,165 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - S-Class 시스템 초기화 시작
2025-07-11 13:47:18,167 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:47:18,168 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.performance_monitor=<systems.performance.PerformanceOptimizer object at 0x000002969F96DE90>
2025-07-11 13:47:18,170 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:47:18,170 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.personalization_engine=<systems.personalization.PersonalizationEngine object at 0x000002969F98F350>
2025-07-11 13:47:18,171 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:47:18,172 - systems.dynamic           - INFO     - DynamicAnalysisEngine 초기화 완료
2025-07-11 13:47:18,172 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.dynamic_analysis=<systems.dynamic.DynamicAnalysisEngine object at 0x000002969F97A190>
2025-07-11 13:47:18,173 - systems.backup            - INFO     - SensorBackupManager 초기화 완료
2025-07-11 13:47:18,173 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.backup_manager=<systems.backup.SensorBackupManager object at 0x000002969F96E9D0>
2025-07-11 13:47:18,174 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.calibration_manager=<io_handler.video_input.MultiVideoCalibrationManager object at 0x00000296A0F22090>
2025-07-11 13:47:18,174 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - 캘리브레이션 매니저 초기화 완료
2025-07-11 13:47:18,175 - app                       - INFO     - [진단] app.py: run 진입
2025-07-11 13:47:18,175 - app                       - INFO     - [진단] app.py: run - asyncio import 완료
2025-07-11 13:47:18,175 - app                       - INFO     - [진단] app.py: run - frame_queue 생성, maxsize=5
2025-07-11 13:47:18,175 - app                       - INFO     - [진단] app.py: run - stop_event 생성
2025-07-11 13:47:18,176 - app                       - INFO     - [진단] app.py: run - display_thread 생성
2025-07-11 13:47:18,178 - app                       - INFO     - [진단] app.py: run - opencv_display_loop 진입
2025-07-11 13:47:18,178 - app                       - INFO     - [진단] app.py: run - display_thread 시작
2025-07-11 13:47:18,178 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame=None 초기화
2025-07-11 13:47:18,180 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:18,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer 진입
2025-07-11 13:47:18,180 - app                       - INFO     - [진단] app.py: initialize 진입
2025-07-11 13:47:18,180 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 초기화 시작...
2025-07-11 13:47:18,180 - app                       - INFO     - [진단] app.py: initialize - self.state_manager=<core.state_manager.EnhancedStateManager object at 0x00000296A11819D0>
2025-07-11 13:47:18,190 - systems.metrics_manager   - INFO     - MetricsManager 초기화 완료 - 히스토리 크기: 900
2025-07-11 13:47:18,191 - integration.integrated_system - INFO     - 새로운 시스템 초기화 시작 - 성능 우선 전략
2025-07-11 13:47:18,192 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 시작: standard
2025-07-11 13:47:18,192 - analysis.factory.analysis_factory - INFO     - 지원 기능: advanced_drowsiness_detection, multi_level_distraction_detection, precise_head_pose_tracking, gaze_zone_classification, emotion_recognition...
2025-07-11 13:47:18,193 - analysis.factory.analysis_factory - INFO     - 표준 성능 DMS 시스템 생성 중...
2025-07-11 13:47:18,193 - analysis.fusion.fusion_engine_advanced - INFO     - MultiModalFusionEngine (S-Class) 초기화 완료 - 디지털 신경과학자 준비됨
2025-07-11 13:47:18,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:18,294 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:18,294 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:18,339 - analysis.drowsiness       - INFO     - EnhancedDrowsinessDetector 초기화 완료
2025-07-11 13:47:18,339 - analysis.emotion          - INFO     - EmotionRecognitionSystem 초기화 완료
2025-07-11 13:47:18,339 - analysis.gaze             - INFO     - EnhancedSphericalGazeClassifier 초기화: 11개 구역 정의됨
2025-07-11 13:47:18,339 - analysis.identity         - INFO     - 1명의 운전자 프로필 로드됨
2025-07-11 13:47:18,339 - analysis.identity         - INFO     - DriverIdentificationSystem 초기화 완료
2025-07-11 13:47:18,339 - analysis.processors.face_processor_s_class - INFO     - FaceDataProcessor (S-Class) 초기화 완료 - 디지털 심리학자 준비됨
2025-07-11 13:47:18,339 - analysis.processors.pose_processor_s_class - INFO     - PoseDataProcessor (S-Class) 초기화 완료 - 자세 분석 전문가 준비됨
2025-07-11 13:47:18,339 - analysis.processors.hand_processor_s_class - INFO     - HandDataProcessor (S-Class, 인터페이스 통합) 초기화 완료
2025-07-11 13:47:18,339 - analysis.processors.object_processor_s_class - INFO     - ObjectDataProcessor (S-Class) 초기화 완료 - 행동 예측 전문가 준비됨
2025-07-11 13:47:18,339 - analysis.orchestrator.orchestrator_advanced - INFO     - AnalysisOrchestrator (S-Class) 초기화 완료 - 지능형 지휘자 준비됨
2025-07-11 13:47:18,339 - analysis.factory.analysis_factory - INFO     - 표준 DMS 시스템 생성 완료 - 균형 모드 활성화
2025-07-11 13:47:18,339 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 완료: standard
2025-07-11 13:47:18,339 - integration.integrated_system - INFO     - ✅ 새로운 standard 시스템 생성 완료
2025-07-11 13:47:18,339 - integration.integrated_system - INFO     - IntegratedDMSSystem 초기화 완료 - 타입: standard, 레거시: False
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: initialize - self.integrated_system=<integration.integrated_system.IntegratedDMSSystem object at 0x00000296A1181A10>
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 await 전
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: _initialize_async_components 진입
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks 리스트 생성 전
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks=[<coroutine object IntegratedDMSSystem.initialize at 0x00000296A132D8A0>, <coroutine object PersonalizationEngine.initialize at 0x00000296A1EDBD80>, <coroutine object DynamicAnalysisEngine.initialize at 0x00000296A1ED2E90>]
2025-07-11 13:47:18,339 - app                       - INFO     - [진단] app.py: _initialize_async_components - asyncio.gather await 전
2025-07-11 13:47:18,353 - events.event_bus          - INFO     - EventBus 초기화 완료 - 중추 신경계 가동 시작
2025-07-11 13:47:18,353 - events.event_bus          - INFO     - EventBus 시작됨 - 모든 우선순위 큐 처리 시작
2025-07-11 13:47:18,353 - events.event_bus          - INFO     - 글로벌 이벤트 시스템 초기화 완료
2025-07-11 13:47:18,353 - events.handlers           - INFO     - SafetyEventHandler 초기화 완료 - 안전 모니터링 시작
2025-07-11 13:47:18,353 - events.event_bus          - INFO     - 글로벌 핸들러 등록: SafetyEventHandler
2025-07-11 13:47:18,354 - events.handlers           - INFO     - AnalyticsEventHandler 초기화 완료 - 성능 모니터링 시작
2025-07-11 13:47:18,354 - events.event_bus          - INFO     - 글로벌 핸들러 등록: AnalyticsEventHandler
2025-07-11 13:47:18,354 - systems.metrics_manager   - INFO     - StateManager와 연결됨
2025-07-11 13:47:18,355 - core.state_manager        - INFO     - MetricsManager와 연결됨
2025-07-11 13:47:18,356 - integration.integrated_system - INFO     - IntegratedDMSSystem 비동기 초기화 완료
2025-07-11 13:47:18,358 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:47:18,358 - systems.personalization   - INFO     - PersonalizationEngine for default initialized.
2025-07-11 13:47:18,359 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:47:18,359 - systems.dynamic           - INFO     - DynamicAnalysisEngine for async initialized.
2025-07-11 13:47:18,360 - app                       - INFO     - [진단] app.py: _initialize_async_components - 모든 S-Class 비동기 컴포넌트 초기화 완료
2025-07-11 13:47:18,360 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 완료
2025-07-11 13:47:18,362 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:47:18,362 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/face_landmarker.task에 CPU 모드 적용
2025-07-11 13:47:18,524 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:18,524 - systems.mediapipe_manager - INFO     - ✅ FaceLandmarker 초기화 완료
2025-07-11 13:47:18,524 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:18,524 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/pose_landmarker_full.task에 CPU 모드 적용
2025-07-11 13:47:18,524 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:18,815 - systems.mediapipe_manager - INFO     - ✅ PoseLandmarker 초기화 완료
2025-07-11 13:47:18,816 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/hand_landmarker.task에 CPU 모드 적용
2025-07-11 13:47:18,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:18,941 - systems.mediapipe_manager - INFO     - ✅ HandLandmarker 초기화 완료
2025-07-11 13:47:18,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:18,941 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/efficientdet_lite0.tflite에 CPU 모드 적용
2025-07-11 13:47:18,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,045 - systems.mediapipe_manager - INFO     - ✅ ObjectDetector 초기화 완료
2025-07-11 13:47:19,045 - systems.mediapipe_manager - INFO     - MediaPipe 태스크 초기화 완료: 4/4 성공
2025-07-11 13:47:19,046 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager(더미)=<systems.mediapipe_manager.EnhancedMediaPipeManager object at 0x00000296A1F1E610>
2025-07-11 13:47:19,046 - app                       - INFO     - [진단] app.py: initialize - callback_adapter=<app.SafeOrchestratorCallbackAdapter object at 0x000002969F950D10>
2025-07-11 13:47:19,047 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager.analysis_engine=<app.SafeOrchestratorCallbackAdapter object at 0x000002969F950D10>
2025-07-11 13:47:19,047 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 전
2025-07-11 13:47:19,047 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 완료
2025-07-11 13:47:19,047 - app                       - INFO     - [진단] app.py: initialize - self.video_input_manager=<io_handler.video_input.VideoInputManager object at 0x00000296A1F1F390>
2025-07-11 13:47:19,047 - io_handler.video_input    - INFO     - VideoInputManager 초기화 시작 - 입력 소스: 0
2025-07-11 13:47:19,048 - io_handler.video_input    - INFO     - 웹캠 모드 - 디바이스 0
2025-07-11 13:47:19,048 - io_handler.video_input    - INFO     - Windows/개발 환경: 표준 웹캠 캡처 사용 (디바이스: 0)
2025-07-11 13:47:19,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,393 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,393 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,393 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,501 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,501 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:19,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:19,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:19,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,042 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,042 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,042 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,501 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,501 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,852 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,852 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,852 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:20,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:20,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:20,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,468 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:21,937 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:21,937 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:21,937 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,169 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,169 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,169 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,497 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,497 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,498 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:22,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:22,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:22,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,286 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,286 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:23,946 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:23,946 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:23,946 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,162 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,162 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,162 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:24,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:24,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:24,930 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,477 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:25,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:25,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:25,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:26,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:26,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:26,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:27,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:27,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:27,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,020 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:28,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:28,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:28,935 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:29,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:29,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:29,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,068 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,068 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,068 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,419 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,746 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,746 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,746 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:30,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:30,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:30,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,318 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,318 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,318 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,762 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,762 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,762 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,870 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,870 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,870 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:31,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:31,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:31,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,569 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,569 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,685 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,685 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:32,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:32,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:32,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,269 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,386 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:33,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:33,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:33,871 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,018 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,018 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,019 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,572 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,572 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,572 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,685 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,685 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:34,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:34,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:34,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,718 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:35,951 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:35,951 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:35,951 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,385 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,737 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,737 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,737 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:36,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:36,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:36,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,653 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,768 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:37,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:37,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:37,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,003 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,352 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,352 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,352 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,701 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,701 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,701 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:38,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:38,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:38,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,047 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,047 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,047 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:39,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:39,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:39,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,871 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:40,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:40,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:40,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:41,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:41,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:41,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,034 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,253 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:42,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:42,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:42,953 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,185 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,185 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,753 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,753 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,754 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,869 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:43,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:43,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:43,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,320 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,539 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,563 - io_handler.video_input    - INFO     - 웹캠 테스트 성공: (480, 640, 3)
2025-07-11 13:47:44,564 - io_handler.video_input    - INFO     - VideoCapture 객체 성공적으로 생성됨
2025-07-11 13:47:44,566 - io_handler.video_input    - INFO     - [진단] VideoCapture backend: MSMF, codec:    , 총 프레임: -1
2025-07-11 13:47:44,568 - io_handler.video_input    - INFO     - 리더 스레드 시작 - 비디오 모드: False
2025-07-11 13:47:44,568 - io_handler.video_input    - INFO     - 리더 스레드 시작 대기 중...
2025-07-11 13:47:44,568 - io_handler.video_input    - INFO     - 비디오 속성 - 해상도: 640x480, FPS: 30.00, 총 프레임: -1
2025-07-11 13:47:44,606 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,645 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,658 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,658 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,659 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,684 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,721 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,763 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,800 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,836 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,874 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:44,893 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:44,893 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:44,913 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,950 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:44,987 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:45,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,008 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,030 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,067 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,069 - io_handler.video_input    - INFO     - 첫 번째 프레임 대기 중 (최대 5.0초)...
2025-07-11 13:47:45,069 - io_handler.video_input    - INFO     - ✅ 첫 번째 프레임 수신 성공
2025-07-11 13:47:45,070 - io_handler.video_input    - INFO     - ✅ 입력 소스 초기화 및 스레드 시작 완료
2025-07-11 13:47:45,070 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 v18+ (연구 결과 통합) 초기화 완료
2025-07-11 13:47:45,070 - app                       - INFO     - [진단] app.py: initialize - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 13:47:45,071 - app                       - INFO     - [진단] app.py: initialize - self.initialization_completed=True
2025-07-11 13:47:45,072 - app                       - INFO     - [진단] app.py: run - S-Class DMS 시스템 초기화 완료
2025-07-11 13:47:45,073 - app                       - INFO     - [진단] app.py: run - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 13:47:45,073 - app                       - INFO     - [진단] app.py: run - S-Class DMS v18+ 시스템 시작 안내
2025-07-11 13:47:45,106 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,126 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:45,127 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,128 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,145 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,177 - app                       - INFO     - [진단] app.py: run - 초기 대기 완료
2025-07-11 13:47:45,177 - app                       - INFO     - [진단] app.py: run - frame_count 초기화: 0
2025-07-11 13:47:45,178 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=0
2025-07-11 13:47:45,178 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,183 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,183 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,184 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,184 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,185 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,185 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,186 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,186 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,187 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,187 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 1
2025-07-11 13:47:45,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,194 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,195 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=1
2025-07-11 13:47:45,195 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,213 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,214 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,214 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,215 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,217 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 2
2025-07-11 13:47:45,220 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,229 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=2
2025-07-11 13:47:45,230 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,278 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,278 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,281 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 3
2025-07-11 13:47:45,288 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=3
2025-07-11 13:47:45,291 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,340 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,342 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,342 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,342 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,342 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,342 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,342 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,344 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,344 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 4
2025-07-11 13:47:45,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=4
2025-07-11 13:47:45,358 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,401 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,401 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,401 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,404 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 5
2025-07-11 13:47:45,406 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,409 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,409 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=5
2025-07-11 13:47:45,410 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,468 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,468 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,468 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,468 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,471 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,472 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,473 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,474 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,475 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,475 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 6
2025-07-11 13:47:45,493 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,494 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=6
2025-07-11 13:47:45,495 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,500 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,502 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 13:47:45,505 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 7
2025-07-11 13:47:45,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,508 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=7
2025-07-11 13:47:45,508 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,567 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,567 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,569 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 13:47:45,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 8
2025-07-11 13:47:45,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=8
2025-07-11 13:47:45,571 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,642 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,644 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,644 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,644 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 13:47:45,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 9
2025-07-11 13:47:45,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=9
2025-07-11 13:47:45,657 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,704 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 13:47:45,713 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,713 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 10
2025-07-11 13:47:45,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=10
2025-07-11 13:47:45,716 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,769 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,772 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,772 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,773 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,774 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,774 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,775 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 13:47:45,775 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 11
2025-07-11 13:47:45,778 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,779 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=11
2025-07-11 13:47:45,779 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,834 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,834 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,834 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,835 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,836 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,836 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,838 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,840 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,842 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,842 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 12
2025-07-11 13:47:45,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,855 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=12
2025-07-11 13:47:45,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,856 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,867 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,867 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,867 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,868 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,868 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,898 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,899 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,902 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,902 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,902 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,905 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,905 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 13
2025-07-11 13:47:45,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=13
2025-07-11 13:47:45,911 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:45,968 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:45,968 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:45,968 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:45,968 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:45,969 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:45,969 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:45,969 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:45,969 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:45,969 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:45,969 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:45,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 14
2025-07-11 13:47:45,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:45,973 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:45,975 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:45,975 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=14
2025-07-11 13:47:45,975 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:45,980 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:45,980 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,050 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,052 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,052 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,052 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,052 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 15
2025-07-11 13:47:46,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,058 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,059 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=15
2025-07-11 13:47:46,059 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,074 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,075 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,106 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,107 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,108 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,109 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,109 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,111 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,111 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 16
2025-07-11 13:47:46,112 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,112 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,113 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,113 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=16
2025-07-11 13:47:46,115 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,125 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,125 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,170 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,172 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,172 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,175 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,175 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,175 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 17
2025-07-11 13:47:46,177 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,177 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,177 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,177 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=17
2025-07-11 13:47:46,179 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,193 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,193 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,236 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,238 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 18
2025-07-11 13:47:46,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,244 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,245 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,245 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=18
2025-07-11 13:47:46,246 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,297 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 19
2025-07-11 13:47:46,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,303 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,321 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=19
2025-07-11 13:47:46,323 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,323 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,364 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,364 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,365 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 20
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,365 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=20
2025-07-11 13:47:46,370 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,431 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,444 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,444 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,444 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,447 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 21
2025-07-11 13:47:46,449 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,449 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,457 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,458 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,458 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=21
2025-07-11 13:47:46,459 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,512 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,552 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,563 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,575 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 13:47:46,588 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,596 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,600 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,601 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,603 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,604 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 22
2025-07-11 13:47:46,616 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,621 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,621 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=22
2025-07-11 13:47:46,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,623 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,632 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,632 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,637 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 23
2025-07-11 13:47:46,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,652 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,653 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=23
2025-07-11 13:47:46,654 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,657 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,658 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,658 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,659 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,659 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,659 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,659 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 24
2025-07-11 13:47:46,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,665 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,667 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,668 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,670 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=24
2025-07-11 13:47:46,684 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,702 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,704 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,707 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,707 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,708 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,708 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,709 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,709 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,710 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 25
2025-07-11 13:47:46,710 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,712 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,713 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,714 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=25
2025-07-11 13:47:46,714 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,728 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,729 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,764 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,766 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 26
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,767 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,770 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=26
2025-07-11 13:47:46,770 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,787 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,789 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,831 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,847 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,847 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,848 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,848 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,849 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,849 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 27
2025-07-11 13:47:46,850 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,851 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,855 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,855 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=27
2025-07-11 13:47:46,855 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,864 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,865 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,906 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 28
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,913 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,921 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=28
2025-07-11 13:47:46,922 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:46,970 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:46,972 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:46,973 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:46,975 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:46,975 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:46,976 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:46,976 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:46,977 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:46,977 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:46,977 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:46,977 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 29
2025-07-11 13:47:46,978 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:46,978 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:46,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:46,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:46,990 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=29
2025-07-11 13:47:46,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:46,991 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,033 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,035 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,035 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,035 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,036 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,036 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 30
2025-07-11 13:47:47,037 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,052 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,052 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,052 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=30
2025-07-11 13:47:47,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,053 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,098 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,099 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,099 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,099 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,100 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,100 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,100 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,101 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,101 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,101 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,101 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 31
2025-07-11 13:47:47,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,117 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,117 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,117 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=31
2025-07-11 13:47:47,118 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,119 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,163 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,164 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,164 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,165 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,166 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,166 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,166 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,166 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,166 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,167 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 32
2025-07-11 13:47:47,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,170 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=32
2025-07-11 13:47:47,171 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,226 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,226 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,227 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,227 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,228 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,228 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,228 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,228 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,229 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,229 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,229 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 33
2025-07-11 13:47:47,229 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,230 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=33
2025-07-11 13:47:47,231 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,237 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,313 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 34
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,315 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=34
2025-07-11 13:47:47,327 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,341 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,342 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,343 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,343 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,343 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,344 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,344 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 35
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,345 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,346 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=35
2025-07-11 13:47:47,347 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,347 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,356 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,402 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,402 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,402 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,402 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,402 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,404 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,404 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,405 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,407 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 36
2025-07-11 13:47:47,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,421 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,423 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=36
2025-07-11 13:47:47,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,423 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,467 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 37
2025-07-11 13:47:47,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,470 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,476 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=37
2025-07-11 13:47:47,477 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,532 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,535 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,535 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 38
2025-07-11 13:47:47,535 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,535 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,542 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=38
2025-07-11 13:47:47,542 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,555 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,595 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 39
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,595 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,600 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,603 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,604 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=39
2025-07-11 13:47:47,605 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,664 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,704 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 40
2025-07-11 13:47:47,706 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,713 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,718 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,718 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=40
2025-07-11 13:47:47,719 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,739 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,740 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,741 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,741 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,744 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,744 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,745 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,746 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 41
2025-07-11 13:47:47,746 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,747 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,762 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,764 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=41
2025-07-11 13:47:47,765 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,787 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,800 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,802 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,802 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,802 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,802 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,803 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 42
2025-07-11 13:47:47,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,804 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,806 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,810 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=42
2025-07-11 13:47:47,810 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,864 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 43
2025-07-11 13:47:47,864 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,867 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,867 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,873 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=43
2025-07-11 13:47:47,873 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,931 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 44
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,931 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:47,934 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:47,938 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:47,940 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=44
2025-07-11 13:47:47,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:47,940 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:47,994 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 45
2025-07-11 13:47:47,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:47,997 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:47,997 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,005 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,007 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=45
2025-07-11 13:47:48,007 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,010 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,010 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,064 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,105 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 46
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,118 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,119 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=46
2025-07-11 13:47:48,119 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,139 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,141 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 47
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,154 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=47
2025-07-11 13:47:48,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,156 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,200 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,200 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,203 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,203 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 48
2025-07-11 13:47:48,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,204 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,208 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=48
2025-07-11 13:47:48,209 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,264 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,264 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,264 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,264 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,264 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,264 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,266 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 49
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,269 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,269 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=49
2025-07-11 13:47:48,269 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,333 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,333 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,333 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,334 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 50
2025-07-11 13:47:48,334 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,337 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,340 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=50
2025-07-11 13:47:48,345 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,395 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,395 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,395 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,398 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,399 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,399 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,400 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,400 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,400 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,400 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,400 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 51
2025-07-11 13:47:48,401 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,401 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,402 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=51
2025-07-11 13:47:48,403 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 13:47:48,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 13:47:48,465 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:47:48,505 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 52
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 13:47:48,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=52
2025-07-11 13:47:48,514 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:47:48,519 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 113
2025-07-11 13:47:48,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 'q' 입력, stop_event.set() 및 break
2025-07-11 13:47:48,533 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - OpenCV 창 종료
2025-07-11 13:47:48,539 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:47:48,539 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:47:48,550 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 13:47:48,551 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 13:47:48,551 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 13:47:48,552 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 13:47:48,553 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 13:47:48,553 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 13:47:48,554 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 53
2025-07-11 13:47:48,557 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 13:47:48,557 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 종료 시 frame_queue에 None 삽입
2025-07-11 13:47:48,557 - events.event_bus          - INFO     - CRITICAL 우선순위 큐 처리 취소됨
2025-07-11 13:47:48,557 - events.event_bus          - INFO     - MEDIUM 우선순위 큐 처리 취소됨
2025-07-11 13:47:48,557 - events.event_bus          - INFO     - EMERGENCY 우선순위 큐 처리 취소됨
2025-07-11 13:47:48,557 - events.event_bus          - INFO     - HIGH 우선순위 큐 처리 취소됨
2025-07-11 13:47:48,557 - events.event_bus          - INFO     - LOW 우선순위 큐 처리 취소됨
2025-07-11 13:47:48,565 - app                       - INFO     - [진단] app.py: run - asyncio.run(async_frame_producer()) 완료
2025-07-11 13:47:48,566 - app                       - INFO     - [진단] app.py: run - stop_event.set() 호출
2025-07-11 13:47:48,567 - app                       - INFO     - [진단] app.py: run - display_thread.join() 완료
