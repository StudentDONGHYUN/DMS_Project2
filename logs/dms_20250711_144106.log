2025-07-11 14:41:17,526 - __main__                  - INFO     - [진단] main.py: main() 진입
2025-07-11 14:41:31,666 - __main__                  - INFO     - S-Class 설정 완료: {'input_source': 0, 'user_id': 'default', 'camera_position': <CameraPosition.REARVIEW_MIRROR: '백미러 위치'>, 'enable_calibration': False, 'is_same_driver': True, 'system_type': <AnalysisSystemType.STANDARD: 'standard'>, 'use_legacy_engine': False, 'sclass_features': {'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}}
2025-07-11 14:41:31,667 - app                       - INFO     - [진단] app.py: DMSApp.__init__ 진입
2025-07-11 14:41:31,667 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - input_source=0
2025-07-11 14:41:31,668 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.input_source=0
2025-07-11 14:41:31,668 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - user_id=default
2025-07-11 14:41:31,668 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.user_id=default
2025-07-11 14:41:31,668 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - camera_position=백미러 위치
2025-07-11 14:41:31,669 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.camera_position=백미러 위치
2025-07-11 14:41:31,669 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - enable_calibration=False
2025-07-11 14:41:31,669 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.enable_calibration=False
2025-07-11 14:41:31,669 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - is_same_driver=True
2025-07-11 14:41:31,670 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.is_same_driver=True
2025-07-11 14:41:31,670 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - system_type=AnalysisSystemType.STANDARD
2025-07-11 14:41:31,670 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.system_type=AnalysisSystemType.STANDARD
2025-07-11 14:41:31,671 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - use_legacy_engine=False
2025-07-11 14:41:31,671 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.use_legacy_engine=False
2025-07-11 14:41:31,671 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 14:41:31,672 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 14:41:31,672 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.running=False
2025-07-11 14:41:31,673 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.paused=False
2025-07-11 14:41:31,673 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.current_processed_frame=None
2025-07-11 14:41:31,674 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.initialization_completed=False
2025-07-11 14:41:31,674 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.safe_mode=False
2025-07-11 14:41:31,674 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.error_count=0
2025-07-11 14:41:31,675 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - S-Class 시스템 초기화 시작
2025-07-11 14:41:31,678 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 14:41:31,679 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.performance_monitor=<systems.performance.PerformanceOptimizer object at 0x000001CEB06B5410>
2025-07-11 14:41:31,681 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 14:41:31,681 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.personalization_engine=<systems.personalization.PersonalizationEngine object at 0x000001CEAEC87610>
2025-07-11 14:41:31,682 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 14:41:31,682 - systems.dynamic           - INFO     - DynamicAnalysisEngine 초기화 완료
2025-07-11 14:41:31,682 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.dynamic_analysis=<systems.dynamic.DynamicAnalysisEngine object at 0x000001CEB025AC10>
2025-07-11 14:41:31,683 - systems.backup            - INFO     - SensorBackupManager 초기화 완료
2025-07-11 14:41:31,683 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.backup_manager=<systems.backup.SensorBackupManager object at 0x000001CEB025ABD0>
2025-07-11 14:41:31,683 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.calibration_manager=<io_handler.video_input.MultiVideoCalibrationManager object at 0x000001CEAECBCC90>
2025-07-11 14:41:31,684 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - 캘리브레이션 매니저 초기화 완료
2025-07-11 14:41:31,684 - app                       - INFO     - [진단] app.py: run 진입
2025-07-11 14:41:31,685 - app                       - INFO     - [진단] app.py: run - asyncio import 완료
2025-07-11 14:41:31,685 - app                       - INFO     - [진단] app.py: run - frame_queue 생성, maxsize=5
2025-07-11 14:41:31,685 - app                       - INFO     - [진단] app.py: run - stop_event 생성
2025-07-11 14:41:31,685 - app                       - INFO     - [진단] app.py: run - display_thread 생성
2025-07-11 14:41:31,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop 진입
2025-07-11 14:41:31,688 - app                       - INFO     - [진단] app.py: run - display_thread 시작
2025-07-11 14:41:31,689 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame=None 초기화
2025-07-11 14:41:31,691 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:31,692 - app                       - INFO     - [진단] app.py: run - async_frame_producer 진입
2025-07-11 14:41:31,693 - app                       - INFO     - [진단] app.py: initialize 진입
2025-07-11 14:41:31,693 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 초기화 시작...
2025-07-11 14:41:31,694 - app                       - INFO     - [진단] app.py: initialize - self.state_manager=<core.state_manager.EnhancedStateManager object at 0x000001CEAECD1610>
2025-07-11 14:41:31,698 - systems.metrics_manager   - INFO     - MetricsManager 초기화 완료 - 히스토리 크기: 900
2025-07-11 14:41:31,700 - integration.integrated_system - INFO     - 새로운 시스템 초기화 시작 - 성능 우선 전략
2025-07-11 14:41:31,700 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 시작: standard
2025-07-11 14:41:31,701 - analysis.factory.analysis_factory - INFO     - 지원 기능: advanced_drowsiness_detection, multi_level_distraction_detection, precise_head_pose_tracking, gaze_zone_classification, emotion_recognition...
2025-07-11 14:41:31,701 - analysis.factory.analysis_factory - INFO     - 표준 성능 DMS 시스템 생성 중...
2025-07-11 14:41:31,702 - analysis.fusion.fusion_engine_advanced - INFO     - MultiModalFusionEngine (S-Class) 초기화 완료 - 디지털 신경과학자 준비됨
2025-07-11 14:41:31,800 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:31,816 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:31,817 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:31,861 - analysis.drowsiness       - INFO     - EnhancedDrowsinessDetector 초기화 완료
2025-07-11 14:41:31,861 - analysis.emotion          - INFO     - EmotionRecognitionSystem 초기화 완료
2025-07-11 14:41:31,861 - analysis.gaze             - INFO     - EnhancedSphericalGazeClassifier 초기화: 11개 구역 정의됨
2025-07-11 14:41:31,861 - analysis.identity         - INFO     - 1명의 운전자 프로필 로드됨
2025-07-11 14:41:31,861 - analysis.identity         - INFO     - DriverIdentificationSystem 초기화 완료
2025-07-11 14:41:31,861 - analysis.processors.face_processor_s_class - INFO     - FaceDataProcessor (S-Class) 초기화 완료 - 디지털 심리학자 준비됨
2025-07-11 14:41:31,861 - analysis.processors.pose_processor_s_class - INFO     - PoseDataProcessor (S-Class) 초기화 완료 - 자세 분석 전문가 준비됨
2025-07-11 14:41:31,861 - analysis.processors.hand_processor_s_class - INFO     - HandDataProcessor (S-Class, 인터페이스 통합) 초기화 완료
2025-07-11 14:41:31,861 - analysis.processors.object_processor_s_class - INFO     - ObjectDataProcessor (S-Class) 초기화 완료 - 행동 예측 전문가 준비됨
2025-07-11 14:41:31,861 - analysis.orchestrator.orchestrator_advanced - INFO     - AnalysisOrchestrator (S-Class) 초기화 완료 - 지능형 지휘자 준비됨
2025-07-11 14:41:31,861 - analysis.factory.analysis_factory - INFO     - 표준 DMS 시스템 생성 완료 - 균형 모드 활성화
2025-07-11 14:41:31,861 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 완료: standard
2025-07-11 14:41:31,861 - integration.integrated_system - INFO     - ✅ 새로운 standard 시스템 생성 완료
2025-07-11 14:41:31,861 - integration.integrated_system - INFO     - IntegratedDMSSystem 초기화 완료 - 타입: standard, 레거시: False
2025-07-11 14:41:31,867 - app                       - INFO     - [진단] app.py: initialize - self.integrated_system=<integration.integrated_system.IntegratedDMSSystem object at 0x000001CEAEC86790>
2025-07-11 14:41:31,868 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 await 전
2025-07-11 14:41:31,868 - app                       - INFO     - [진단] app.py: _initialize_async_components 진입
2025-07-11 14:41:31,868 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks 리스트 생성 전
2025-07-11 14:41:31,869 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks=[<coroutine object IntegratedDMSSystem.initialize at 0x000001CEB06612F0>, <coroutine object PersonalizationEngine.initialize at 0x000001CEB11F7760>, <coroutine object DynamicAnalysisEngine.initialize at 0x000001CEB11F28E0>]
2025-07-11 14:41:31,869 - app                       - INFO     - [진단] app.py: _initialize_async_components - asyncio.gather await 전
2025-07-11 14:41:31,870 - events.event_bus          - INFO     - EventBus 초기화 완료 - 중추 신경계 가동 시작
2025-07-11 14:41:31,870 - events.event_bus          - INFO     - EventBus 시작됨 - 모든 우선순위 큐 처리 시작
2025-07-11 14:41:31,870 - events.event_bus          - INFO     - 글로벌 이벤트 시스템 초기화 완료
2025-07-11 14:41:31,870 - events.handlers           - INFO     - SafetyEventHandler 초기화 완료 - 안전 모니터링 시작
2025-07-11 14:41:31,871 - events.event_bus          - INFO     - 글로벌 핸들러 등록: SafetyEventHandler
2025-07-11 14:41:31,871 - events.handlers           - INFO     - AnalyticsEventHandler 초기화 완료 - 성능 모니터링 시작
2025-07-11 14:41:31,871 - events.event_bus          - INFO     - 글로벌 핸들러 등록: AnalyticsEventHandler
2025-07-11 14:41:31,872 - systems.metrics_manager   - INFO     - StateManager와 연결됨
2025-07-11 14:41:31,872 - core.state_manager        - INFO     - MetricsManager와 연결됨
2025-07-11 14:41:31,872 - integration.integrated_system - INFO     - IntegratedDMSSystem 비동기 초기화 완료
2025-07-11 14:41:31,874 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 14:41:31,874 - systems.personalization   - INFO     - PersonalizationEngine for default initialized.
2025-07-11 14:41:31,874 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 14:41:31,875 - systems.dynamic           - INFO     - DynamicAnalysisEngine for async initialized.
2025-07-11 14:41:31,875 - app                       - INFO     - [진단] app.py: _initialize_async_components - 모든 S-Class 비동기 컴포넌트 초기화 완료
2025-07-11 14:41:31,875 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 완료
2025-07-11 14:41:31,877 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 14:41:31,877 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/face_landmarker.task에 CPU 모드 적용
2025-07-11 14:41:31,957 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:31,957 - systems.mediapipe_manager - INFO     - ✅ FaceLandmarker 초기화 완료
2025-07-11 14:41:31,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:31,972 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/pose_landmarker_full.task에 CPU 모드 적용
2025-07-11 14:41:31,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:32,225 - systems.mediapipe_manager - INFO     - ✅ PoseLandmarker 초기화 완료
2025-07-11 14:41:32,225 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/hand_landmarker.task에 CPU 모드 적용
2025-07-11 14:41:32,343 - systems.mediapipe_manager - INFO     - ✅ HandLandmarker 초기화 완료
2025-07-11 14:41:32,343 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:32,343 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/efficientdet_lite0.tflite에 CPU 모드 적용
2025-07-11 14:41:32,343 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:32,443 - systems.mediapipe_manager - INFO     - ✅ ObjectDetector 초기화 완료
2025-07-11 14:41:32,443 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:32,443 - systems.mediapipe_manager - INFO     - MediaPipe 태스크 초기화 완료: 4/4 성공
2025-07-11 14:41:32,444 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager(더미)=<systems.mediapipe_manager.EnhancedMediaPipeManager object at 0x000001CEB1245AD0>
2025-07-11 14:41:32,444 - app                       - INFO     - [진단] app.py: initialize - callback_adapter=<app.SafeOrchestratorCallbackAdapter object at 0x000001CEB1246910>
2025-07-11 14:41:32,445 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager.analysis_engine=<app.SafeOrchestratorCallbackAdapter object at 0x000001CEB1246910>
2025-07-11 14:41:32,445 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 전
2025-07-11 14:41:32,446 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 완료
2025-07-11 14:41:32,447 - app                       - INFO     - [진단] app.py: initialize - self.video_input_manager=<io_handler.video_input.VideoInputManager object at 0x000001CEB1246950>
2025-07-11 14:41:32,447 - io_handler.video_input    - INFO     - [진단] video_input.initialize 진입
2025-07-11 14:41:32,447 - io_handler.video_input    - INFO     - [진단] video_input.initialize - self.input_source=0
2025-07-11 14:41:32,448 - io_handler.video_input    - INFO     - 웹캠 모드 - 디바이스 0
2025-07-11 14:41:32,448 - io_handler.video_input    - INFO     - Windows/개발 환경: 표준 웹캠 캡처 사용 (디바이스: 0)
2025-07-11 14:41:32,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:32,572 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:32,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:32,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:32,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:32,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:32,789 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:32,790 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:32,790 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:32,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:32,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:32,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,252 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:33,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:33,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:33,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,270 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,607 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,719 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:34,939 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:34,939 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:34,939 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,165 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,165 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,165 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,508 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:35,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:35,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:35,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,313 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,313 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,313 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,742 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,742 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,742 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,860 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,860 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,861 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:36,964 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:36,964 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:36,964 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:37,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:37,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:37,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,003 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,003 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,335 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,335 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,335 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,562 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,562 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,563 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,791 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,791 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,791 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:38,897 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:38,897 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:38,897 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,131 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,255 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,369 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:39,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:39,954 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:39,955 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,166 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,277 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,278 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,278 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,395 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,395 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,395 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,616 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,616 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,616 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:40,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:40,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:40,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,197 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,197 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,197 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,536 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,655 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,655 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,655 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:41,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:41,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:41,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:42,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:42,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:42,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,257 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,257 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,486 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:43,955 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:43,955 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:43,955 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,417 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,417 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,417 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,740 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,740 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,740 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:44,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:44,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:44,968 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,494 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,494 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,494 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,828 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,828 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,828 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:45,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:45,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:45,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,159 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,267 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,268 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,377 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,608 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,608 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,608 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,827 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:46,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:46,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:46,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,046 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,046 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,046 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,259 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,260 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,475 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:47,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:47,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:47,942 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,058 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,058 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,059 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,724 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:48,955 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:48,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:48,957 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,192 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,425 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,425 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,539 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:49,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:49,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:49,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,456 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,457 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,679 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,679 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,679 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:50,898 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:50,898 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:50,898 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,020 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,020 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,462 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,462 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,462 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,790 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,791 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,793 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:51,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:51,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:51,904 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,012 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,351 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,351 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,351 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,582 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,582 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,582 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,692 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,692 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,692 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:52,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:52,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:52,936 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,168 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,402 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,402 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,402 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,636 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,853 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:53,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:53,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:53,972 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,079 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,079 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,079 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,655 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,655 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,759 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,759 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,760 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:54,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:54,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:54,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,223 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,456 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,572 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:55,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:55,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:55,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,392 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,737 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:56,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:56,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:56,970 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,074 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,186 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,292 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,643 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,643 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,644 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,757 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,757 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:57,992 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:57,992 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:57,992 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,223 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,442 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,442 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,442 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,558 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,558 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,790 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,791 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:58,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:58,907 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:58,907 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,025 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,140 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,140 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,257 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,374 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,375 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,607 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,607 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,607 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,807 - io_handler.video_input    - INFO     - 웹캠 테스트 성공: (480, 640, 3)
2025-07-11 14:41:59,807 - io_handler.video_input    - INFO     - VideoCapture 객체 성공적으로 생성됨
2025-07-11 14:41:59,807 - io_handler.video_input    - INFO     - [진단] VideoCapture backend: MSMF, codec:    , 총 프레임: -1
2025-07-11 14:41:59,807 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 진입
2025-07-11 14:41:59,807 - io_handler.video_input    - INFO     - 리더 스레드 시작 대기 중...
2025-07-11 14:41:59,818 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,818 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,823 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,823 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,832 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,832 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,853 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,853 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,886 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,886 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,918 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,918 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,951 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,951 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:41:59,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:41:59,957 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:41:59,957 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:41:59,982 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:41:59,982 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,061 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,064 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,075 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:42:00,084 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,108 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,158 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,187 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,187 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,195 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,195 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,201 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,201 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,207 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,208 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,222 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,223 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,258 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,275 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:42:00,294 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,296 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,297 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,298 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,316 - io_handler.video_input    - INFO     - 첫 번째 프레임 대기 중 (최대 5.0초)...
2025-07-11 14:42:00,316 - io_handler.video_input    - INFO     - ✅ 첫 번째 프레임 수신 성공
2025-07-11 14:42:00,317 - io_handler.video_input    - INFO     - ✅ 입력 소스 초기화 및 스레드 시작 완료
2025-07-11 14:42:00,317 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 v18+ (연구 결과 통합) 초기화 완료
2025-07-11 14:42:00,317 - app                       - INFO     - [진단] app.py: initialize - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 14:42:00,318 - app                       - INFO     - [진단] app.py: initialize - self.initialization_completed=True
2025-07-11 14:42:00,318 - app                       - INFO     - [진단] app.py: run - S-Class DMS 시스템 초기화 완료
2025-07-11 14:42:00,318 - app                       - INFO     - [진단] app.py: run - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 14:42:00,319 - app                       - INFO     - [진단] app.py: run - S-Class DMS v18+ 시스템 시작 안내
2025-07-11 14:42:00,320 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,320 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,350 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,350 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,383 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,383 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:42:00,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,416 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,417 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,420 - app                       - INFO     - [진단] app.py: run - 초기 대기 완료
2025-07-11 14:42:00,420 - app                       - INFO     - [진단] app.py: run - frame_count 초기화: 0
2025-07-11 14:42:00,420 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=0
2025-07-11 14:42:00,421 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,421 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,423 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 1
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,430 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,430 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=1
2025-07-11 14:42:00,430 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,431 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,431 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,432 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 2
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=2
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,440 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 3
2025-07-11 14:42:00,456 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,458 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=3
2025-07-11 14:42:00,458 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,461 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,462 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,462 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,463 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,464 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,465 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,465 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 4
2025-07-11 14:42:00,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=4
2025-07-11 14:42:00,467 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,467 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,469 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,469 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,470 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 5
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=5
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 6
2025-07-11 14:42:00,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=6
2025-07-11 14:42:00,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,491 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,491 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,491 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,493 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,494 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,495 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,495 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 7
2025-07-11 14:42:00,498 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,498 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=7
2025-07-11 14:42:00,499 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,500 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,501 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 8
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=8
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 9
2025-07-11 14:42:00,522 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,524 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=9
2025-07-11 14:42:00,526 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,528 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,529 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,530 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,531 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,531 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,532 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 10
2025-07-11 14:42:00,532 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=10
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 11
2025-07-11 14:42:00,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,558 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=11
2025-07-11 14:42:00,559 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,559 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,560 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,560 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,561 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,561 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,562 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,562 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 12
2025-07-11 14:42:00,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,565 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=12
2025-07-11 14:42:00,565 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 13
2025-07-11 14:42:00,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,572 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=13
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 14
2025-07-11 14:42:00,582 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,582 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=14
2025-07-11 14:42:00,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,584 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,584 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,584 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 15
2025-07-11 14:42:00,590 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,590 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=15
2025-07-11 14:42:00,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,598 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,599 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,599 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,599 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,600 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,600 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 16
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=16
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,607 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 17
2025-07-11 14:42:00,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,624 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,624 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=17
2025-07-11 14:42:00,624 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,627 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,627 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 18
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=18
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 19
2025-07-11 14:42:00,653 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,653 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,655 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=19
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 20
2025-07-11 14:42:00,668 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=20
2025-07-11 14:42:00,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,670 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,670 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,670 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,671 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,671 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,672 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 21
2025-07-11 14:42:00,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=21
2025-07-11 14:42:00,685 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,685 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,686 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,687 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,687 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,688 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,690 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,692 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,693 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 22
2025-07-11 14:42:00,695 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,695 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=22
2025-07-11 14:42:00,697 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,698 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,698 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,698 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,699 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,699 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,699 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 23
2025-07-11 14:42:00,702 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,702 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=23
2025-07-11 14:42:00,702 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,703 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,703 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,703 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,704 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,704 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,704 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 24
2025-07-11 14:42:00,707 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,709 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=24
2025-07-11 14:42:00,710 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,710 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,711 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,712 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,712 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,714 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,714 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 25
2025-07-11 14:42:00,717 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,717 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=25
2025-07-11 14:42:00,718 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,718 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,719 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,719 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,719 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,719 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,720 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,720 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,721 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 26
2025-07-11 14:42:00,722 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,725 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,725 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=26
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 27
2025-07-11 14:42:00,738 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,739 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,740 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=27
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,747 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,748 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,750 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,751 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,751 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 28
2025-07-11 14:42:00,754 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,755 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,755 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=28
2025-07-11 14:42:00,756 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,756 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,758 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,759 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,759 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,759 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,760 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,760 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,761 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,762 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,763 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,764 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,764 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 29
2025-07-11 14:42:00,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=29
2025-07-11 14:42:00,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,766 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,768 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,768 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,768 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,768 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 30
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=30
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,780 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,780 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,781 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 31
2025-07-11 14:42:00,785 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,785 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=31
2025-07-11 14:42:00,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,786 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,786 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,786 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,788 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,789 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,792 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,792 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,792 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,792 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,792 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,795 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,796 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 32
2025-07-11 14:42:00,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=32
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 33
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=33
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,807 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,814 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,815 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,816 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,817 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,817 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 34
2025-07-11 14:42:00,820 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,820 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=34
2025-07-11 14:42:00,821 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,822 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,824 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,825 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,825 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,826 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,827 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,829 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,829 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,830 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,831 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,832 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 35
2025-07-11 14:42:00,838 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,841 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=35
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,842 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,851 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 36
2025-07-11 14:42:00,855 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=36
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,858 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,865 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,865 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,866 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,867 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,868 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,869 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 37
2025-07-11 14:42:00,870 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,871 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,871 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=37
2025-07-11 14:42:00,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,874 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,875 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,875 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,876 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,876 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,877 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,877 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,878 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,878 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,879 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 38
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=38
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 39
2025-07-11 14:42:00,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=39
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,896 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,897 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,898 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,900 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,900 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,901 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 40
2025-07-11 14:42:00,903 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,903 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,903 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=40
2025-07-11 14:42:00,903 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,903 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,904 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,908 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,909 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,910 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 41
2025-07-11 14:42:00,913 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=41
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 42
2025-07-11 14:42:00,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,924 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,925 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,925 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=42
2025-07-11 14:42:00,926 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,927 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,928 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,928 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,928 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,929 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,930 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,932 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,932 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,932 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 43
2025-07-11 14:42:00,934 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,934 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=43
2025-07-11 14:42:00,939 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,940 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,942 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,943 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,944 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,944 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,945 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,946 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,947 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,948 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 44
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=44
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,951 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,955 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,955 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,957 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,958 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 45
2025-07-11 14:42:00,960 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,960 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=45
2025-07-11 14:42:00,961 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,961 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,961 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,961 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,962 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,963 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,963 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,963 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,963 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,964 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,965 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,965 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 46
2025-07-11 14:42:00,968 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,968 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=46
2025-07-11 14:42:00,969 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,970 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,970 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,970 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,970 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,971 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,972 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,972 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,974 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:00,974 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 47
2025-07-11 14:42:00,980 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,980 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,981 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=47
2025-07-11 14:42:00,981 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,981 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,981 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,981 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,982 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,982 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,982 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,983 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,983 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,984 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 48
2025-07-11 14:42:00,987 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:00,987 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=48
2025-07-11 14:42:00,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:00,990 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:00,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:00,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:00,991 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:00,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:00,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:00,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:00,993 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:00,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:00,994 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:00,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:00,994 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:00,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:00,997 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 49
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=49
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,006 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,012 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,012 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 50
2025-07-11 14:42:01,022 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,023 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,024 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=50
2025-07-11 14:42:01,026 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,027 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,030 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,030 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,030 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,030 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,030 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 51
2025-07-11 14:42:01,036 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,037 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=51
2025-07-11 14:42:01,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,037 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,038 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,039 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,041 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,041 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,041 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,041 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,041 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 52
2025-07-11 14:42:01,052 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,053 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=52
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,053 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,055 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,058 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,059 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,060 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,061 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,061 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 53
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=53
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 54
2025-07-11 14:42:01,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,069 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=54
2025-07-11 14:42:01,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,070 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,070 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,071 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,073 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,074 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,076 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,076 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,077 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 55
2025-07-11 14:42:01,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=55
2025-07-11 14:42:01,079 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,080 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 56
2025-07-11 14:42:01,085 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,085 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,085 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=56
2025-07-11 14:42:01,085 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,086 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,086 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,086 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,087 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,087 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,088 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,089 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,090 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,091 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,092 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 57
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=57
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,095 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,098 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,098 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,098 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 58
2025-07-11 14:42:01,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,104 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,104 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=58
2025-07-11 14:42:01,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,107 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,107 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,109 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,111 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,111 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,112 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 59
2025-07-11 14:42:01,117 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,117 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,120 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,121 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=59
2025-07-11 14:42:01,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,124 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,124 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,124 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,127 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,128 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,129 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,130 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,131 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 60
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=60
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,146 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,147 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,147 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,147 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,148 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 61
2025-07-11 14:42:01,150 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,150 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=61
2025-07-11 14:42:01,150 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,151 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,151 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,151 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,151 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,151 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,153 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,153 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,153 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,154 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 62
2025-07-11 14:42:01,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,155 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=62
2025-07-11 14:42:01,157 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,157 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,159 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,160 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,161 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,162 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,163 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,163 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,163 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 63
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=63
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,180 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,181 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,182 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,183 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,183 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,183 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 64
2025-07-11 14:42:01,184 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,188 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=64
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,191 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,195 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,197 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,197 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 65
2025-07-11 14:42:01,199 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,199 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=65
2025-07-11 14:42:01,199 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 66
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=66
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,206 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,212 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,212 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,215 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,216 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,217 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,218 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 67
2025-07-11 14:42:01,221 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,221 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=67
2025-07-11 14:42:01,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,224 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,225 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,226 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,226 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,226 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,229 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,230 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,231 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 68
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=68
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 69
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=69
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,248 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,248 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,249 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,249 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,249 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 70
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=70
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 71
2025-07-11 14:42:01,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=71
2025-07-11 14:42:01,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,262 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,264 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,265 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,265 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 72
2025-07-11 14:42:01,266 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,266 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,271 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=72
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,274 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,281 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,281 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 73
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=73
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,295 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,296 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,298 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,299 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,299 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,300 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 74
2025-07-11 14:42:01,301 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,302 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,307 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=74
2025-07-11 14:42:01,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 75
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=75
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 76
2025-07-11 14:42:01,312 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,318 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=76
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,319 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,320 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,320 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,321 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,324 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 77
2025-07-11 14:42:01,327 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,328 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=77
2025-07-11 14:42:01,329 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,330 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,330 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,331 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,331 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,331 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,331 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,331 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,332 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,332 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,332 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,332 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,332 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 78
2025-07-11 14:42:01,333 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,334 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,336 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,336 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=78
2025-07-11 14:42:01,336 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,337 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,337 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,338 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,338 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,339 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,339 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 79
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,356 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,356 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=79
2025-07-11 14:42:01,359 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,359 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,359 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,360 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,360 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,362 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,362 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,362 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,363 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,364 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,365 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,365 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 80
2025-07-11 14:42:01,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=80
2025-07-11 14:42:01,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,371 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,372 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,374 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,374 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,377 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 81
2025-07-11 14:42:01,379 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,379 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=81
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 82
2025-07-11 14:42:01,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,391 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,391 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=82
2025-07-11 14:42:01,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,391 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,397 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,399 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,399 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,400 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 83
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=83
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,403 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,404 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 84
2025-07-11 14:42:01,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,424 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,424 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,424 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,424 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=84
2025-07-11 14:42:01,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,428 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,429 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,429 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,432 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,432 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 85
2025-07-11 14:42:01,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=85
2025-07-11 14:42:01,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,438 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,438 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,439 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 86
2025-07-11 14:42:01,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,450 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=86
2025-07-11 14:42:01,451 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,451 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,451 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,452 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,452 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,452 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,452 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,453 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,453 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,454 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,454 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,456 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 87
2025-07-11 14:42:01,465 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=87
2025-07-11 14:42:01,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,468 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,468 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,468 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,468 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 88
2025-07-11 14:42:01,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=88
2025-07-11 14:42:01,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,471 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,471 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,472 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,473 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 89
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,474 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,485 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,485 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=89
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,488 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,490 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,490 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,492 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,493 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,493 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 90
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=90
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 91
2025-07-11 14:42:01,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,502 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=91
2025-07-11 14:42:01,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,504 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,505 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,506 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,508 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,509 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 92
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=92
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,511 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,515 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,515 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,515 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 93
2025-07-11 14:42:01,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,518 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=93
2025-07-11 14:42:01,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,519 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,519 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,520 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,520 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,521 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,522 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,523 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,524 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,525 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,526 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 94
2025-07-11 14:42:01,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=94
2025-07-11 14:42:01,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,533 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,534 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,534 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,534 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,534 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 95
2025-07-11 14:42:01,537 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,537 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=95
2025-07-11 14:42:01,537 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,538 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,539 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,540 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 96
2025-07-11 14:42:01,541 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,545 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,545 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=96
2025-07-11 14:42:01,549 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,549 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,549 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,550 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,550 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,551 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,551 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,551 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,551 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,552 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 97
2025-07-11 14:42:01,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,553 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=97
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,573 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,581 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,582 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,582 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 98
2025-07-11 14:42:01,584 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,584 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=98
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,587 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 99
2025-07-11 14:42:01,588 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,589 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=99
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,590 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,597 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 100
2025-07-11 14:42:01,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=100
2025-07-11 14:42:01,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,601 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,601 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,601 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,601 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,601 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 101
2025-07-11 14:42:01,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,602 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,615 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,615 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=101
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,618 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,619 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,619 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,619 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,620 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,620 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,621 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,621 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,622 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 102
2025-07-11 14:42:01,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=102
2025-07-11 14:42:01,626 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,627 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,627 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,629 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 103
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=103
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,638 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,638 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,639 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 104
2025-07-11 14:42:01,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=104
2025-07-11 14:42:01,646 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,647 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,648 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,648 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,649 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,649 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,649 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,649 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,649 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,651 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 105
2025-07-11 14:42:01,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,651 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,667 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,667 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,668 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,668 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=105
2025-07-11 14:42:01,668 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,672 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,673 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,676 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,677 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,678 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,680 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,681 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,681 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 106
2025-07-11 14:42:01,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=106
2025-07-11 14:42:01,683 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,684 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,684 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,684 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,684 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,686 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 107
2025-07-11 14:42:01,688 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,690 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,692 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,693 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,696 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,700 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,701 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,706 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,708 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,710 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,711 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=107
2025-07-11 14:42:01,712 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,714 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,714 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,714 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,716 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,717 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,717 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,717 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,717 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 108
2025-07-11 14:42:01,721 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=108
2025-07-11 14:42:01,724 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,725 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,725 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,726 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,732 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,732 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,733 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,733 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,734 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,735 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,735 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,737 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,738 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,745 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 109
2025-07-11 14:42:01,755 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,756 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,761 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=109
2025-07-11 14:42:01,762 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,763 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,763 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,763 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,763 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,763 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,763 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,777 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,777 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,779 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,780 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,781 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,784 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 110
2025-07-11 14:42:01,790 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,790 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,791 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,792 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=110
2025-07-11 14:42:01,795 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,796 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,797 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,802 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,802 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,804 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,804 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,810 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,810 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,810 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 111
2025-07-11 14:42:01,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,819 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,826 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=111
2025-07-11 14:42:01,828 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,830 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,830 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,831 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,831 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,834 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,835 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 112
2025-07-11 14:42:01,851 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,852 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=112
2025-07-11 14:42:01,853 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,854 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,854 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,854 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,855 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,855 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 113
2025-07-11 14:42:01,866 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,866 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=113
2025-07-11 14:42:01,867 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,867 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,867 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,868 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,868 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,868 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,868 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,869 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 114
2025-07-11 14:42:01,870 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,870 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,871 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=114
2025-07-11 14:42:01,872 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,874 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,874 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,876 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,876 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,877 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,877 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,877 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:01,878 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,879 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 115
2025-07-11 14:42:01,882 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,885 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,885 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,887 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=115
2025-07-11 14:42:01,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,889 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,889 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,896 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,897 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,897 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,900 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,901 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 116
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=116
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,918 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,919 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 117
2025-07-11 14:42:01,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,921 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,922 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,924 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=117
2025-07-11 14:42:01,928 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,928 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,932 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,936 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,937 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,937 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,937 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,938 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 118
2025-07-11 14:42:01,940 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=118
2025-07-11 14:42:01,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,944 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,946 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,948 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,948 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,953 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,954 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,954 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,955 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,959 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 119
2025-07-11 14:42:01,961 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,963 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,964 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,964 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,982 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,982 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=119
2025-07-11 14:42:01,984 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,985 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,985 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,986 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:01,986 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:01,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:01,986 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:01,986 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:01,988 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:01,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:01,990 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:01,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:01,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 120
2025-07-11 14:42:01,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:01,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=120
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:01,998 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,002 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,002 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,003 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,004 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,004 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,005 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,007 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 121
2025-07-11 14:42:02,012 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,012 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,015 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=121
2025-07-11 14:42:02,016 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,017 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,018 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,018 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,018 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,019 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,019 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,019 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,019 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,021 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,022 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,023 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,024 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 122
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=122
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,026 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 123
2025-07-11 14:42:02,042 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,042 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,046 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,047 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=123
2025-07-11 14:42:02,048 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,049 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,049 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,049 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,050 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,051 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,052 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,053 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,054 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,055 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,057 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,058 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,058 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 124
2025-07-11 14:42:02,060 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,063 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,064 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,064 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,076 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,077 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=124
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,078 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,082 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,082 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,082 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,084 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,084 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 125
2025-07-11 14:42:02,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,088 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,088 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=125
2025-07-11 14:42:02,092 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,093 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,094 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,095 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,095 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,096 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,097 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,098 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,099 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,099 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,100 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,101 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 126
2025-07-11 14:42:02,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,105 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=126
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,106 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,111 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,114 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,115 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,116 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 127
2025-07-11 14:42:02,118 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,118 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=127
2025-07-11 14:42:02,119 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,119 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,119 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,120 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,125 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,127 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,128 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,129 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,129 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,129 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,129 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,133 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,134 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 128
2025-07-11 14:42:02,137 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,137 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=128
2025-07-11 14:42:02,137 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,139 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,140 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,140 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,148 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 129
2025-07-11 14:42:02,152 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,152 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=129
2025-07-11 14:42:02,152 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,152 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,152 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,155 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,156 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,157 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,159 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,160 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,160 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,160 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,160 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,160 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,160 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 130
2025-07-11 14:42:02,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=130
2025-07-11 14:42:02,172 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,173 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,173 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,176 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 131
2025-07-11 14:42:02,176 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,177 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,177 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,178 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=131
2025-07-11 14:42:02,178 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,179 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,179 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,181 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,182 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,182 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,183 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,183 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 132
2025-07-11 14:42:02,186 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,186 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=132
2025-07-11 14:42:02,187 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,187 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,188 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,189 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,189 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,190 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,190 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,190 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,190 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,190 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,191 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 133
2025-07-11 14:42:02,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,192 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,203 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,204 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=133
2025-07-11 14:42:02,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,205 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,208 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,209 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,211 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,212 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 134
2025-07-11 14:42:02,214 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,214 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=134
2025-07-11 14:42:02,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,217 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,217 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,217 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,218 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 135
2025-07-11 14:42:02,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,219 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=135
2025-07-11 14:42:02,219 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,220 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,220 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,221 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,223 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,224 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,225 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,225 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,226 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,226 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,227 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 136
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=136
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,235 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,236 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,236 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,237 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,237 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,239 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 137
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=137
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,250 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,251 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,251 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,252 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,252 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,252 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,253 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,253 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,254 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,254 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 138
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=138
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 139
2025-07-11 14:42:02,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,265 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=139
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,266 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,267 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,267 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,267 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,267 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,268 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,268 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,268 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 140
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=140
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 141
2025-07-11 14:42:02,282 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,282 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,283 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=141
2025-07-11 14:42:02,283 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,284 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,284 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,284 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,284 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,284 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,284 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,284 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,286 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,287 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,287 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,288 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,288 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 142
2025-07-11 14:42:02,289 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,289 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=142
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 143
2025-07-11 14:42:02,298 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=143
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,300 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,300 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 144
2025-07-11 14:42:02,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=144
2025-07-11 14:42:02,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,303 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,303 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,303 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,304 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,304 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 145
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=145
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 146
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=146
2025-07-11 14:42:02,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,316 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,316 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,316 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,317 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,317 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 147
2025-07-11 14:42:02,318 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,318 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,336 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,337 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=147
2025-07-11 14:42:02,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,337 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,338 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,338 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,340 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,340 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,340 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,340 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,340 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 148
2025-07-11 14:42:02,352 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,352 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,352 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,352 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=148
2025-07-11 14:42:02,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,353 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,353 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,354 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,356 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,357 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,357 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,358 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,359 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 149
2025-07-11 14:42:02,365 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,365 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,366 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=149
2025-07-11 14:42:02,366 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,366 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,368 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,368 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,368 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,368 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,369 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 150
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=150
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 151
2025-07-11 14:42:02,381 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,381 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=151
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,383 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,384 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,384 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,385 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,385 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,385 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,385 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,386 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,386 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 152
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=152
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 153
2025-07-11 14:42:02,403 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=153
2025-07-11 14:42:02,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,408 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,408 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,408 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,408 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,408 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 154
2025-07-11 14:42:02,417 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,417 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=154
2025-07-11 14:42:02,418 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,418 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,418 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,418 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,419 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,419 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,419 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,419 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,419 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,421 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 155
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=155
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,429 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,429 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,429 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 156
2025-07-11 14:42:02,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,446 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,446 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=156
2025-07-11 14:42:02,447 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,447 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,447 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,449 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,449 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,450 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,450 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,451 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 157
2025-07-11 14:42:02,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=157
2025-07-11 14:42:02,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,460 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 158
2025-07-11 14:42:02,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=158
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,476 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,478 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,480 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,481 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,482 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,483 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,483 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 159
2025-07-11 14:42:02,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=159
2025-07-11 14:42:02,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,486 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,486 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,486 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,486 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,487 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,487 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,488 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 160
2025-07-11 14:42:02,494 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=160
2025-07-11 14:42:02,498 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,499 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,499 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,499 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,499 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,500 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 161
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=161
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,503 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,509 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,511 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,513 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,515 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 162
2025-07-11 14:42:02,516 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,516 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=162
2025-07-11 14:42:02,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,517 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,517 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,518 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,519 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,519 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,519 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:42:02,519 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,519 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 163
2025-07-11 14:42:02,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,527 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,528 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,528 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,528 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,528 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,528 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=163
2025-07-11 14:42:02,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 164
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,551 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,552 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=164
2025-07-11 14:42:02,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,552 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,552 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,553 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,553 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,554 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,556 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,557 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,558 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,558 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,558 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 165
2025-07-11 14:42:02,558 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=165
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,567 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,568 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 166
2025-07-11 14:42:02,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=166
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 167
2025-07-11 14:42:02,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,586 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=167
2025-07-11 14:42:02,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,588 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,590 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,592 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,592 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,596 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,597 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 168
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=168
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,609 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 169
2025-07-11 14:42:02,622 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,622 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=169
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,625 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,631 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 170
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=170
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:42:02,638 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 171
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 113
2025-07-11 14:42:02,644 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 'q' 입력, stop_event.set() 및 break
2025-07-11 14:42:02,653 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:42:02,654 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:42:02,655 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:42:02,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 종료 시 frame_queue에 None 삽입
2025-07-11 14:42:02,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - OpenCV 창 종료
2025-07-11 14:42:02,657 - events.event_bus          - INFO     - MEDIUM 우선순위 큐 처리 취소됨
2025-07-11 14:42:02,657 - events.event_bus          - INFO     - EMERGENCY 우선순위 큐 처리 취소됨
2025-07-11 14:42:02,657 - events.event_bus          - INFO     - LOW 우선순위 큐 처리 취소됨
2025-07-11 14:42:02,657 - events.event_bus          - INFO     - HIGH 우선순위 큐 처리 취소됨
2025-07-11 14:42:02,657 - events.event_bus          - INFO     - CRITICAL 우선순위 큐 처리 취소됨
2025-07-11 14:42:02,657 - app                       - INFO     - [진단] app.py: run - asyncio.run(async_frame_producer()) 완료
2025-07-11 14:42:02,657 - app                       - INFO     - [진단] app.py: run - stop_event.set() 호출
2025-07-11 14:42:02,657 - app                       - INFO     - [진단] app.py: run - display_thread.join() 완료
