2025-07-11 13:31:12,572 - __main__                  - INFO     - [진단] main.py: main() 진입
2025-07-11 13:31:16,812 - __main__                  - INFO     - S-Class 설정 완료: {'input_source': 0, 'user_id': 'default', 'camera_position': <CameraPosition.REARVIEW_MIRROR: '백미러 위치'>, 'enable_calibration': False, 'is_same_driver': True, 'system_type': <AnalysisSystemType.STANDARD: 'standard'>, 'use_legacy_engine': False, 'sclass_features': {'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}}
2025-07-11 13:31:16,814 - app                       - INFO     - [진단] app.py: DMSApp.__init__ 진입
2025-07-11 13:31:16,815 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:31:16,815 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:31:16,816 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:31:16,816 - systems.dynamic           - INFO     - DynamicAnalysisEngine 초기화 완료
2025-07-11 13:31:16,817 - systems.backup            - INFO     - SensorBackupManager 초기화 완료
2025-07-11 13:31:16,817 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - 캘리브레이션 매니저 초기화 완료
2025-07-11 13:31:16,821 - app                       - INFO     - [진단] app.py: initialize 진입
2025-07-11 13:31:16,821 - app                       - INFO     - 🚀 S-Class DMS 시스템 초기화 시작...
2025-07-11 13:31:16,822 - app                       - INFO     - [진단] app.py: initialize - 상태 관리자 초기화 완료
2025-07-11 13:31:16,824 - systems.metrics_manager   - INFO     - MetricsManager 초기화 완료 - 히스토리 크기: 900
2025-07-11 13:31:16,825 - integration.integrated_system - INFO     - 새로운 시스템 초기화 시작 - 성능 우선 전략
2025-07-11 13:31:16,825 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 시작: standard
2025-07-11 13:31:16,825 - analysis.factory.analysis_factory - INFO     - 지원 기능: advanced_drowsiness_detection, multi_level_distraction_detection, precise_head_pose_tracking, gaze_zone_classification, emotion_recognition...
2025-07-11 13:31:16,826 - analysis.factory.analysis_factory - INFO     - 표준 성능 DMS 시스템 생성 중...
2025-07-11 13:31:16,826 - analysis.fusion.fusion_engine_advanced - INFO     - MultiModalFusionEngine (S-Class) 초기화 완료 - 디지털 신경과학자 준비됨
2025-07-11 13:31:16,950 - analysis.drowsiness       - INFO     - EnhancedDrowsinessDetector 초기화 완료
2025-07-11 13:31:16,950 - analysis.emotion          - INFO     - EmotionRecognitionSystem 초기화 완료
2025-07-11 13:31:16,951 - analysis.gaze             - INFO     - EnhancedSphericalGazeClassifier 초기화: 11개 구역 정의됨
2025-07-11 13:31:16,951 - analysis.identity         - INFO     - 1명의 운전자 프로필 로드됨
2025-07-11 13:31:16,952 - analysis.identity         - INFO     - DriverIdentificationSystem 초기화 완료
2025-07-11 13:31:16,952 - analysis.processors.face_processor_s_class - INFO     - FaceDataProcessor (S-Class) 초기화 완료 - 디지털 심리학자 준비됨
2025-07-11 13:31:16,952 - analysis.processors.pose_processor_s_class - INFO     - PoseDataProcessor (S-Class) 초기화 완료 - 자세 분석 전문가 준비됨
2025-07-11 13:31:16,953 - analysis.processors.hand_processor_s_class - INFO     - HandDataProcessor (S-Class, 인터페이스 통합) 초기화 완료
2025-07-11 13:31:16,953 - analysis.processors.object_processor_s_class - INFO     - ObjectDataProcessor (S-Class) 초기화 완료 - 행동 예측 전문가 준비됨
2025-07-11 13:31:16,953 - analysis.orchestrator.orchestrator_advanced - INFO     - AnalysisOrchestrator (S-Class) 초기화 완료 - 지능형 지휘자 준비됨
2025-07-11 13:31:16,953 - analysis.factory.analysis_factory - INFO     - 표준 DMS 시스템 생성 완료 - 균형 모드 활성화
2025-07-11 13:31:16,954 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 완료: standard
2025-07-11 13:31:16,954 - integration.integrated_system - INFO     - ✅ 새로운 standard 시스템 생성 완료
2025-07-11 13:31:16,954 - integration.integrated_system - INFO     - IntegratedDMSSystem 초기화 완료 - 타입: standard, 레거시: False
2025-07-11 13:31:16,955 - app                       - INFO     - [진단] app.py: initialize - 통합 DMS 시스템 초기화 완료
2025-07-11 13:31:16,955 - app                       - INFO     - [진단] app.py: _initialize_async_components 진입
2025-07-11 13:31:16,955 - events.event_bus          - INFO     - EventBus 초기화 완료 - 중추 신경계 가동 시작
2025-07-11 13:31:16,955 - events.event_bus          - INFO     - EventBus 시작됨 - 모든 우선순위 큐 처리 시작
2025-07-11 13:31:16,955 - events.event_bus          - INFO     - 글로벌 이벤트 시스템 초기화 완료
2025-07-11 13:31:16,957 - events.handlers           - INFO     - SafetyEventHandler 초기화 완료 - 안전 모니터링 시작
2025-07-11 13:31:16,957 - events.event_bus          - INFO     - 글로벌 핸들러 등록: SafetyEventHandler
2025-07-11 13:31:16,957 - events.handlers           - INFO     - AnalyticsEventHandler 초기화 완료 - 성능 모니터링 시작
2025-07-11 13:31:16,958 - events.event_bus          - INFO     - 글로벌 핸들러 등록: AnalyticsEventHandler
2025-07-11 13:31:16,958 - systems.metrics_manager   - INFO     - StateManager와 연결됨
2025-07-11 13:31:16,958 - core.state_manager        - INFO     - MetricsManager와 연결됨
2025-07-11 13:31:16,959 - integration.integrated_system - INFO     - IntegratedDMSSystem 비동기 초기화 완료
2025-07-11 13:31:16,960 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 13:31:16,960 - systems.personalization   - INFO     - PersonalizationEngine for default initialized.
2025-07-11 13:31:16,960 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 13:31:16,961 - systems.dynamic           - INFO     - DynamicAnalysisEngine for async initialized.
2025-07-11 13:31:16,961 - app                       - INFO     - ✅ 모든 S-Class 비동기 컴포넌트 초기화 완료
2025-07-11 13:31:16,962 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 완료
2025-07-11 13:31:16,963 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 13:31:16,963 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/face_landmarker.task에 CPU 모드 적용
2025-07-11 13:31:17,033 - systems.mediapipe_manager - INFO     - ✅ FaceLandmarker 초기화 완료
2025-07-11 13:31:17,034 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/pose_landmarker_full.task에 CPU 모드 적용
2025-07-11 13:31:17,273 - systems.mediapipe_manager - INFO     - ✅ PoseLandmarker 초기화 완료
2025-07-11 13:31:17,273 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/hand_landmarker.task에 CPU 모드 적용
2025-07-11 13:31:17,372 - systems.mediapipe_manager - INFO     - ✅ HandLandmarker 초기화 완료
2025-07-11 13:31:17,372 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/efficientdet_lite0.tflite에 CPU 모드 적용
2025-07-11 13:31:17,455 - systems.mediapipe_manager - INFO     - ✅ ObjectDetector 초기화 완료
2025-07-11 13:31:17,455 - systems.mediapipe_manager - INFO     - MediaPipe 태스크 초기화 완료: 4/4 성공
2025-07-11 13:31:17,455 - app                       - INFO     - [진단] app.py: initialize - 더미 mediapipe_manager 생성 완료
2025-07-11 13:31:17,455 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 완료
2025-07-11 13:31:17,455 - app                       - INFO     - [진단] app.py: initialize - 비디오 입력 관리자 초기화 완료
2025-07-11 13:31:17,455 - io_handler.video_input    - INFO     - VideoInputManager 초기화 시작 - 입력 소스: 0
2025-07-11 13:31:17,455 - io_handler.video_input    - INFO     - 웹캠 모드 - 디바이스 0
2025-07-11 13:31:17,455 - io_handler.video_input    - INFO     - Windows/개발 환경: 표준 웹캠 캡처 사용 (디바이스: 0)
2025-07-11 13:31:39,806 - io_handler.video_input    - INFO     - 웹캠 테스트 성공: (480, 640, 3)
2025-07-11 13:31:39,806 - io_handler.video_input    - INFO     - VideoCapture 객체 성공적으로 생성됨
2025-07-11 13:31:39,821 - io_handler.video_input    - INFO     - [진단] VideoCapture backend: MSMF, codec:    , 총 프레임: -1
2025-07-11 13:31:39,821 - io_handler.video_input    - INFO     - 리더 스레드 시작 - 비디오 모드: False
2025-07-11 13:31:39,821 - io_handler.video_input    - INFO     - 리더 스레드 시작 대기 중...
2025-07-11 13:31:39,821 - io_handler.video_input    - INFO     - 비디오 속성 - 해상도: 640x480, FPS: 30.00, 총 프레임: -1
2025-07-11 13:31:39,861 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:39,902 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:39,940 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:39,979 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,017 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,055 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,091 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,127 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,166 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,205 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,242 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,279 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,318 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,324 - io_handler.video_input    - INFO     - 첫 번째 프레임 대기 중 (최대 5.0초)...
2025-07-11 13:31:40,325 - io_handler.video_input    - INFO     - ✅ 첫 번째 프레임 수신 성공
2025-07-11 13:31:40,325 - io_handler.video_input    - INFO     - ✅ 입력 소스 초기화 및 스레드 시작 완료
2025-07-11 13:31:40,326 - app                       - INFO     - 🚀 고도화된 S-Class DMS 시스템 v18+ (연구 결과 통합) 초기화 완료
2025-07-11 13:31:40,328 - app                       - INFO     - 📊 S-Class 기능: rPPG 심박수, 사카드 분석, 스파인 정렬, FFT 떨림 분석, 베이지안 예측
2025-07-11 13:31:40,329 - app                       - INFO     - 🎯 어텐션 메커니즘, 인지 부하 모델링, 적응형 파이프라인 활성화
2025-07-11 13:31:40,330 - app                       - INFO     - 🚀 S-Class DMS 시스템 초기화 완료
2025-07-11 13:31:40,331 - app                       - INFO     - 📊 S-Class 기능: rPPG 심박수, 사카드 분석, 스파인 정렬, FFT 떨림 분석, 베이지안 예측
2025-07-11 13:31:40,332 - app                       - INFO     - 🎯 어텐션 메커니즘, 인지 부하 모델링, 적응형 파이프라인 활성화
2025-07-11 13:31:40,334 - app                       - INFO     - 🎯 S-Class DMS v18+ 시스템 시작. 'q'를 눌러 종료, 스페이스바로 일시정지, 's'로 스크린샷 저장
2025-07-11 13:31:40,334 - app                       - INFO     - app.py: main_async_loop 진입
2025-07-11 13:31:40,357 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,394 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,431 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,443 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,470 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,480 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,480 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,494 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,544 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,544 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,546 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,554 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,605 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,607 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,609 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,613 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,640 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,641 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,646 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,702 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,702 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,704 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,707 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,766 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,766 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,768 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,773 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,835 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,836 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,836 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,853 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,917 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,917 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,921 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,922 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:40,973 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:40,975 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:40,979 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:40,981 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,038 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,039 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,045 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,047 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,068 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,069 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,081 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,133 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,133 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,135 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,148 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,197 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,197 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,200 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,212 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,263 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,265 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,265 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,268 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,347 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,347 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,348 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,348 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,407 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,411 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,412 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,412 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,469 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,469 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,471 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,474 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,504 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,505 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,512 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,568 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,568 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,570 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,570 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,600 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,602 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,623 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,666 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,667 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,667 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,670 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,746 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,747 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,749 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,753 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,805 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,806 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,807 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,816 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,869 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,870 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,872 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,885 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,934 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:41,935 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:41,937 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:41,951 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:41,997 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:42,003 - io_handler.video_input    - INFO     - [진단] 프레임 획득 성공: (480, 640, 3)
2025-07-11 13:31:42,010 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:42,021 - io_handler.video_input    - INFO     - [진단] video_input.get_frame 진입
2025-07-11 13:31:42,088 - io_handler.video_input    - INFO     - [진단] video_input.get_frame: ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 13:31:42,090 - app                       - INFO     - [진단] app.py: get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 13:31:42,102 - events.event_bus          - INFO     - EMERGENCY 우선순위 큐 처리 취소됨
2025-07-11 13:31:42,103 - events.event_bus          - INFO     - HIGH 우선순위 큐 처리 취소됨
2025-07-11 13:31:42,103 - events.event_bus          - INFO     - LOW 우선순위 큐 처리 취소됨
2025-07-11 13:31:42,104 - events.event_bus          - INFO     - CRITICAL 우선순위 큐 처리 취소됨
2025-07-11 13:31:42,104 - events.event_bus          - INFO     - MEDIUM 우선순위 큐 처리 취소됨
