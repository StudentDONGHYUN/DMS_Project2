2025-07-11 14:24:59,716 - __main__                  - INFO     - [진단] main.py: main() 진입
2025-07-11 14:26:38,076 - __main__                  - INFO     - S-Class 설정 완료: {'input_source': 0, 'user_id': 'default', 'camera_position': <CameraPosition.REARVIEW_MIRROR: '백미러 위치'>, 'enable_calibration': False, 'is_same_driver': True, 'system_type': <AnalysisSystemType.STANDARD: 'standard'>, 'use_legacy_engine': False, 'sclass_features': {'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}}
2025-07-11 14:26:38,198 - app                       - INFO     - [진단] app.py: DMSApp.__init__ 진입
2025-07-11 14:26:38,200 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - input_source=0
2025-07-11 14:26:38,201 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.input_source=0
2025-07-11 14:26:38,202 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - user_id=default
2025-07-11 14:26:38,203 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.user_id=default
2025-07-11 14:26:38,204 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - camera_position=백미러 위치
2025-07-11 14:26:38,205 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.camera_position=백미러 위치
2025-07-11 14:26:38,206 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - enable_calibration=False
2025-07-11 14:26:38,207 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.enable_calibration=False
2025-07-11 14:26:38,209 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - is_same_driver=True
2025-07-11 14:26:38,210 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.is_same_driver=True
2025-07-11 14:26:38,211 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - system_type=AnalysisSystemType.STANDARD
2025-07-11 14:26:38,212 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.system_type=AnalysisSystemType.STANDARD
2025-07-11 14:26:38,213 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - use_legacy_engine=False
2025-07-11 14:26:38,214 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.use_legacy_engine=False
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.sclass_features={'enable_rppg': True, 'enable_saccade': True, 'enable_spinal_analysis': True, 'enable_tremor_fft': True, 'enable_bayesian_prediction': True}
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.running=False
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.paused=False
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.current_processed_frame=None
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.initialization_completed=False
2025-07-11 14:26:38,215 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.safe_mode=False
2025-07-11 14:26:38,223 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.error_count=0
2025-07-11 14:26:38,224 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - S-Class 시스템 초기화 시작
2025-07-11 14:26:38,368 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 14:26:38,372 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.performance_monitor=<systems.performance.PerformanceOptimizer object at 0x000001AD1C37CB10>
2025-07-11 14:26:38,438 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 14:26:38,440 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.personalization_engine=<systems.personalization.PersonalizationEngine object at 0x000001AD1DA8C9D0>
2025-07-11 14:26:38,441 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 14:26:38,441 - systems.dynamic           - INFO     - DynamicAnalysisEngine 초기화 완료
2025-07-11 14:26:38,441 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.dynamic_analysis=<systems.dynamic.DynamicAnalysisEngine object at 0x000001AD1C33E9D0>
2025-07-11 14:26:38,442 - systems.backup            - INFO     - SensorBackupManager 초기화 완료
2025-07-11 14:26:38,442 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.backup_manager=<systems.backup.SensorBackupManager object at 0x000001AD1C33D510>
2025-07-11 14:26:38,442 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - self.calibration_manager=<io_handler.video_input.MultiVideoCalibrationManager object at 0x000001AD1D917FD0>
2025-07-11 14:26:38,443 - app                       - INFO     - [진단] app.py: DMSApp.__init__ - 캘리브레이션 매니저 초기화 완료
2025-07-11 14:26:38,443 - app                       - INFO     - [진단] app.py: run 진입
2025-07-11 14:26:38,443 - app                       - INFO     - [진단] app.py: run - asyncio import 완료
2025-07-11 14:26:38,444 - app                       - INFO     - [진단] app.py: run - frame_queue 생성, maxsize=5
2025-07-11 14:26:38,444 - app                       - INFO     - [진단] app.py: run - stop_event 생성
2025-07-11 14:26:38,444 - app                       - INFO     - [진단] app.py: run - display_thread 생성
2025-07-11 14:26:38,446 - app                       - INFO     - [진단] app.py: run - opencv_display_loop 진입
2025-07-11 14:26:38,448 - app                       - INFO     - [진단] app.py: run - display_thread 시작
2025-07-11 14:26:38,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame=None 초기화
2025-07-11 14:26:38,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:38,530 - app                       - INFO     - [진단] app.py: run - async_frame_producer 진입
2025-07-11 14:26:38,530 - app                       - INFO     - [진단] app.py: initialize 진입
2025-07-11 14:26:38,531 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 초기화 시작...
2025-07-11 14:26:38,531 - app                       - INFO     - [진단] app.py: initialize - self.state_manager=<core.state_manager.EnhancedStateManager object at 0x000001AD1C277B50>
2025-07-11 14:26:38,532 - systems.metrics_manager   - INFO     - MetricsManager 초기화 완료 - 히스토리 크기: 900
2025-07-11 14:26:38,532 - integration.integrated_system - INFO     - 새로운 시스템 초기화 시작 - 성능 우선 전략
2025-07-11 14:26:38,533 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 시작: standard
2025-07-11 14:26:38,533 - analysis.factory.analysis_factory - INFO     - 지원 기능: advanced_drowsiness_detection, multi_level_distraction_detection, precise_head_pose_tracking, gaze_zone_classification, emotion_recognition...
2025-07-11 14:26:38,533 - analysis.factory.analysis_factory - INFO     - 표준 성능 DMS 시스템 생성 중...
2025-07-11 14:26:38,534 - analysis.fusion.fusion_engine_advanced - INFO     - MultiModalFusionEngine (S-Class) 초기화 완료 - 디지털 신경과학자 준비됨
2025-07-11 14:26:38,634 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:38,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:38,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:38,713 - analysis.drowsiness       - INFO     - EnhancedDrowsinessDetector 초기화 완료
2025-07-11 14:26:38,713 - analysis.emotion          - INFO     - EmotionRecognitionSystem 초기화 완료
2025-07-11 14:26:38,715 - analysis.gaze             - INFO     - EnhancedSphericalGazeClassifier 초기화: 11개 구역 정의됨
2025-07-11 14:26:38,715 - analysis.identity         - INFO     - 1명의 운전자 프로필 로드됨
2025-07-11 14:26:38,715 - analysis.identity         - INFO     - DriverIdentificationSystem 초기화 완료
2025-07-11 14:26:38,715 - analysis.processors.face_processor_s_class - INFO     - FaceDataProcessor (S-Class) 초기화 완료 - 디지털 심리학자 준비됨
2025-07-11 14:26:38,715 - analysis.processors.pose_processor_s_class - INFO     - PoseDataProcessor (S-Class) 초기화 완료 - 자세 분석 전문가 준비됨
2025-07-11 14:26:38,715 - analysis.processors.hand_processor_s_class - INFO     - HandDataProcessor (S-Class, 인터페이스 통합) 초기화 완료
2025-07-11 14:26:38,715 - analysis.processors.object_processor_s_class - INFO     - ObjectDataProcessor (S-Class) 초기화 완료 - 행동 예측 전문가 준비됨
2025-07-11 14:26:38,720 - analysis.orchestrator.orchestrator_advanced - INFO     - AnalysisOrchestrator (S-Class) 초기화 완료 - 지능형 지휘자 준비됨
2025-07-11 14:26:38,720 - analysis.factory.analysis_factory - INFO     - 표준 DMS 시스템 생성 완료 - 균형 모드 활성화
2025-07-11 14:26:38,720 - analysis.factory.analysis_factory - INFO     - DMS 분석 시스템 생성 완료: standard
2025-07-11 14:26:38,721 - integration.integrated_system - INFO     - ✅ 새로운 standard 시스템 생성 완료
2025-07-11 14:26:38,721 - integration.integrated_system - INFO     - IntegratedDMSSystem 초기화 완료 - 타입: standard, 레거시: False
2025-07-11 14:26:38,721 - app                       - INFO     - [진단] app.py: initialize - self.integrated_system=<integration.integrated_system.IntegratedDMSSystem object at 0x000001AD1C33C4D0>
2025-07-11 14:26:38,721 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 await 전
2025-07-11 14:26:38,722 - app                       - INFO     - [진단] app.py: _initialize_async_components 진입
2025-07-11 14:26:38,722 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks 리스트 생성 전
2025-07-11 14:26:38,722 - app                       - INFO     - [진단] app.py: _initialize_async_components - init_tasks=[<coroutine object IntegratedDMSSystem.initialize at 0x000001AD1DD212F0>, <coroutine object PersonalizationEngine.initialize at 0x000001AD1E8CB760>, <coroutine object DynamicAnalysisEngine.initialize at 0x000001AD1E8C28E0>]
2025-07-11 14:26:38,723 - app                       - INFO     - [진단] app.py: _initialize_async_components - asyncio.gather await 전
2025-07-11 14:26:38,724 - events.event_bus          - INFO     - EventBus 초기화 완료 - 중추 신경계 가동 시작
2025-07-11 14:26:38,725 - events.event_bus          - INFO     - EventBus 시작됨 - 모든 우선순위 큐 처리 시작
2025-07-11 14:26:38,725 - events.event_bus          - INFO     - 글로벌 이벤트 시스템 초기화 완료
2025-07-11 14:26:38,725 - events.handlers           - INFO     - SafetyEventHandler 초기화 완료 - 안전 모니터링 시작
2025-07-11 14:26:38,725 - events.event_bus          - INFO     - 글로벌 핸들러 등록: SafetyEventHandler
2025-07-11 14:26:38,725 - events.handlers           - INFO     - AnalyticsEventHandler 초기화 완료 - 성능 모니터링 시작
2025-07-11 14:26:38,725 - events.event_bus          - INFO     - 글로벌 핸들러 등록: AnalyticsEventHandler
2025-07-11 14:26:38,729 - systems.metrics_manager   - INFO     - StateManager와 연결됨
2025-07-11 14:26:38,730 - core.state_manager        - INFO     - MetricsManager와 연결됨
2025-07-11 14:26:38,730 - integration.integrated_system - INFO     - IntegratedDMSSystem 비동기 초기화 완료
2025-07-11 14:26:38,730 - systems.personalization   - INFO     - 사용자 프로필 로드됨: default
2025-07-11 14:26:38,731 - systems.personalization   - INFO     - PersonalizationEngine for default initialized.
2025-07-11 14:26:38,731 - systems.dynamic           - INFO     - DynamicAnalysisEngine 상태 초기화됨.
2025-07-11 14:26:38,731 - systems.dynamic           - INFO     - DynamicAnalysisEngine for async initialized.
2025-07-11 14:26:38,731 - app                       - INFO     - [진단] app.py: _initialize_async_components - 모든 S-Class 비동기 컴포넌트 초기화 완료
2025-07-11 14:26:38,732 - app                       - INFO     - [진단] app.py: initialize - 비동기 컴포넌트 초기화 완료
2025-07-11 14:26:38,732 - systems.performance       - INFO     - PerformanceOptimizer 초기화 완료
2025-07-11 14:26:38,733 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/face_landmarker.task에 CPU 모드 적용
2025-07-11 14:26:38,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:38,883 - systems.mediapipe_manager - INFO     - ✅ FaceLandmarker 초기화 완료
2025-07-11 14:26:38,883 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:38,884 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/pose_landmarker_full.task에 CPU 모드 적용
2025-07-11 14:26:38,884 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,143 - systems.mediapipe_manager - INFO     - ✅ PoseLandmarker 초기화 완료
2025-07-11 14:26:39,154 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/hand_landmarker.task에 CPU 모드 적용
2025-07-11 14:26:39,270 - systems.mediapipe_manager - INFO     - ✅ HandLandmarker 초기화 완료
2025-07-11 14:26:39,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,272 - systems.mediapipe_manager - INFO     - Windows/개발 환경 감지: models/efficientdet_lite0.tflite에 CPU 모드 적용
2025-07-11 14:26:39,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,378 - systems.mediapipe_manager - INFO     - ✅ ObjectDetector 초기화 완료
2025-07-11 14:26:39,378 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,378 - systems.mediapipe_manager - INFO     - MediaPipe 태스크 초기화 완료: 4/4 성공
2025-07-11 14:26:39,379 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager(더미)=<systems.mediapipe_manager.EnhancedMediaPipeManager object at 0x000001AD1E916D10>
2025-07-11 14:26:39,379 - app                       - INFO     - [진단] app.py: initialize - callback_adapter=<app.SafeOrchestratorCallbackAdapter object at 0x000001AD1C0C4C50>
2025-07-11 14:26:39,380 - app                       - INFO     - [진단] app.py: initialize - self.mediapipe_manager.analysis_engine=<app.SafeOrchestratorCallbackAdapter object at 0x000001AD1C0C4C50>
2025-07-11 14:26:39,380 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 전
2025-07-11 14:26:39,380 - app                       - INFO     - [진단] app.py: initialize - 콜백 재설정 완료
2025-07-11 14:26:39,381 - app                       - INFO     - [진단] app.py: initialize - self.video_input_manager=<io_handler.video_input.VideoInputManager object at 0x000001AD1E9176D0>
2025-07-11 14:26:39,381 - io_handler.video_input    - INFO     - [진단] video_input.initialize 진입
2025-07-11 14:26:39,381 - io_handler.video_input    - INFO     - [진단] video_input.initialize - self.input_source=0
2025-07-11 14:26:39,381 - io_handler.video_input    - INFO     - 웹캠 모드 - 디바이스 0
2025-07-11 14:26:39,381 - io_handler.video_input    - INFO     - Windows/개발 환경: 표준 웹캠 캡처 사용 (디바이스: 0)
2025-07-11 14:26:39,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,611 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,612 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,612 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,833 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,834 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,835 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:39,944 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:39,944 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:39,945 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,060 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,060 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,061 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,175 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,175 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,175 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,289 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,289 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,410 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,410 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,410 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,641 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,641 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,642 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,878 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,878 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,879 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:40,985 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:40,985 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:40,985 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,313 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,313 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,314 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,427 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,427 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,427 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,539 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,659 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,659 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,763 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,764 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,764 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,876 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,876 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,877 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:41,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:41,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:41,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,210 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,210 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,210 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,441 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,441 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,442 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,664 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,664 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,664 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:42,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:42,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:42,992 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,215 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,215 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,215 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,324 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,325 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,325 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,440 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,441 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,663 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,663 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,664 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,788 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,789 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:43,908 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:43,909 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:43,909 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,143 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,143 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,143 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,254 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,381 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,381 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,382 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,509 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,621 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,725 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,725 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,726 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:44,960 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:44,961 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:44,962 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,080 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,080 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,080 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,194 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,194 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,195 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,309 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,310 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,310 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,421 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,530 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,530 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,531 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,648 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,673 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,691 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:45,933 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:45,933 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:45,934 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,153 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,395 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,396 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,635 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,768 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,893 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:46,996 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:46,996 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:46,996 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,105 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,222 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,557 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,557 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,558 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,674 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,891 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:47,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:47,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:47,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,112 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,112 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,326 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,546 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,776 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:48,990 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:48,990 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:48,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,109 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,109 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,109 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,348 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,348 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,348 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,463 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,570 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,571 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,678 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,679 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,680 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:49,908 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:49,909 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:49,909 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,129 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,131 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,244 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,245 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,475 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,475 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,596 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,597 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,812 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,812 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,813 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:50,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:50,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:50,923 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,074 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,074 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,414 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,414 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,414 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,525 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,756 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,756 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:51,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:51,990 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:51,990 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,106 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,336 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,569 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,569 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,569 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:52,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,356 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,470 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,583 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,583 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,583 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,703 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,808 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,808 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,808 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:53,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:53,919 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:53,920 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,036 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,155 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,505 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,620 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,735 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,736 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,839 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,839 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,839 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:54,948 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:54,948 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:54,948 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,064 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,064 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,064 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,276 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,490 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,603 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,837 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:55,951 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:55,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:55,952 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,161 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,166 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,167 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,378 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,520 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,639 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,645 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,759 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,779 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,781 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:56,895 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:56,895 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:56,896 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,132 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,133 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,133 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,367 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,382 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,624 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,628 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,630 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,743 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,745 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,748 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,876 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,878 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:57,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:57,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:57,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,110 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,111 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,343 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,343 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,344 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,676 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,677 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,677 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,793 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,793 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,793 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:58,896 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:58,896 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:58,896 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,008 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,010 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,128 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,128 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,128 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,471 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,472 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,586 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,587 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,588 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,704 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,806 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:26:59,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:26:59,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:26:59,925 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,151 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,262 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,263 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,263 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,488 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,604 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,605 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,720 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,721 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:00,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:00,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:00,942 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,271 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,387 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,493 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,657 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,771 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,893 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:01,995 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:01,995 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:01,995 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,323 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,323 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,323 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,544 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,652 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,653 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,654 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,758 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,758 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,758 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:02,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:02,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:02,988 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,094 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,094 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,094 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,554 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,555 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,555 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,672 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,774 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,775 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,775 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:03,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:03,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:03,993 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,108 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,108 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,108 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,220 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,327 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,327 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,327 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,441 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,441 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,442 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,550 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,551 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,665 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,665 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,666 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,778 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,780 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,780 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:04,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:04,886 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:04,887 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,004 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,005 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,123 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,124 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,125 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,359 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,360 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,469 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,581 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,581 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,581 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,694 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,694 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,695 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,803 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:05,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:05,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:05,924 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,152 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,276 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,276 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,388 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,502 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,503 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,610 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,610 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,610 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,722 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,843 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:06,959 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:06,960 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:06,960 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,187 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,293 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,293 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,293 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,403 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,521 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,522 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,637 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,638 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,755 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,871 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,871 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:07,986 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:07,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:07,987 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,088 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,437 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,438 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,543 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,660 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,661 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,661 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,772 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:08,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:08,891 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:08,891 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,006 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,120 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,227 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,227 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,227 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,559 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,774 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,774 - io_handler.video_input    - INFO     - 웹캠 테스트 성공: (480, 640, 3)
2025-07-11 14:27:09,774 - io_handler.video_input    - INFO     - VideoCapture 객체 성공적으로 생성됨
2025-07-11 14:27:09,777 - io_handler.video_input    - INFO     - [진단] VideoCapture backend: MSMF, codec:    , 총 프레임: -1
2025-07-11 14:27:09,777 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 진입
2025-07-11 14:27:09,777 - io_handler.video_input    - INFO     - 리더 스레드 시작 대기 중...
2025-07-11 14:27:09,778 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,783 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,784 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,786 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,792 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,793 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,795 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,803 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,803 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,805 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,835 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,835 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,838 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,867 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,867 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,869 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:09,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:09,892 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:09,899 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,899 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,902 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,929 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,930 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,932 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:09,965 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:09,965 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:09,967 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,010 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:10,011 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:10,012 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:10,015 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,015 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,018 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,046 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,047 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,049 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,079 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,080 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,083 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,111 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,111 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,113 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:10,121 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:10,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:10,140 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,141 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,143 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,171 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,171 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,174 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,204 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,204 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,206 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,236 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,236 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:10,238 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:10,239 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:10,267 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,268 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,270 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,279 - io_handler.video_input    - INFO     - 첫 번째 프레임 대기 중 (최대 5.0초)...
2025-07-11 14:27:10,279 - io_handler.video_input    - INFO     - ✅ 첫 번째 프레임 수신 성공
2025-07-11 14:27:10,279 - io_handler.video_input    - INFO     - ✅ 입력 소스 초기화 및 스레드 시작 완료
2025-07-11 14:27:10,280 - app                       - INFO     - [진단] app.py: initialize - S-Class DMS 시스템 v18+ (연구 결과 통합) 초기화 완료
2025-07-11 14:27:10,280 - app                       - INFO     - [진단] app.py: initialize - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 14:27:10,280 - app                       - INFO     - [진단] app.py: initialize - self.initialization_completed=True
2025-07-11 14:27:10,281 - app                       - INFO     - [진단] app.py: run - S-Class DMS 시스템 초기화 완료
2025-07-11 14:27:10,281 - app                       - INFO     - [진단] app.py: run - S-Class 기능/어텐션/인지 부하/적응형 파이프라인 활성화
2025-07-11 14:27:10,282 - app                       - INFO     - [진단] app.py: run - S-Class DMS v18+ 시스템 시작 안내
2025-07-11 14:27:10,300 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,300 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,303 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,332 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,332 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,335 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,356 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get timeout (queue.Empty)
2025-07-11 14:27:10,358 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:10,359 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:10,364 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,365 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,367 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,393 - app                       - INFO     - [진단] app.py: run - 초기 대기 완료
2025-07-11 14:27:10,393 - app                       - INFO     - [진단] app.py: run - frame_count 초기화: 0
2025-07-11 14:27:10,394 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=0
2025-07-11 14:27:10,394 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,395 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,395 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,395 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,396 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,396 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,397 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:10,397 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 1
2025-07-11 14:27:10,397 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:10,398 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:10,413 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,414 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=1
2025-07-11 14:27:10,415 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,415 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,416 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,416 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,416 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,417 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,418 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,418 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,419 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,419 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 2
2025-07-11 14:27:10,420 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,425 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,425 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=2
2025-07-11 14:27:10,426 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,426 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,427 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,427 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,427 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,428 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,429 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 3
2025-07-11 14:27:10,441 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,442 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=3
2025-07-11 14:27:10,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,444 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,445 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,445 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,446 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,446 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 4
2025-07-11 14:27:10,446 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,447 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,449 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=4
2025-07-11 14:27:10,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,452 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,453 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,454 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,454 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 5
2025-07-11 14:27:10,465 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=5
2025-07-11 14:27:10,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,470 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,471 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,472 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:10,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 6
2025-07-11 14:27:10,475 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,475 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=6
2025-07-11 14:27:10,477 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,478 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,478 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,479 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,479 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,479 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,480 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,480 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,480 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 7
2025-07-11 14:27:10,480 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,485 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,486 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,486 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=7
2025-07-11 14:27:10,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,487 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,488 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,488 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,489 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,490 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,491 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,491 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 8
2025-07-11 14:27:10,500 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,501 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=8
2025-07-11 14:27:10,503 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,506 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,508 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,508 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,509 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,509 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 9
2025-07-11 14:27:10,513 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,513 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,514 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=9
2025-07-11 14:27:10,514 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,516 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,517 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,517 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 10
2025-07-11 14:27:10,530 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,531 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=10
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,532 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,546 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,570 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 11
2025-07-11 14:27:10,575 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,578 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,597 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,597 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,607 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,692 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=11
2025-07-11 14:27:10,704 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,705 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,708 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,709 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,709 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,710 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,710 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,711 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,711 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 12
2025-07-11 14:27:10,711 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,712 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,714 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,722 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,722 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=12
2025-07-11 14:27:10,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,724 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,724 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,724 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,725 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,725 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,725 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,726 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 13
2025-07-11 14:27:10,731 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,732 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,734 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,738 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,738 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=13
2025-07-11 14:27:10,739 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,739 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,739 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,740 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,740 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,740 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 14
2025-07-11 14:27:10,755 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=14
2025-07-11 14:27:10,776 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,778 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,778 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,778 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,783 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,783 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,783 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,783 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,783 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,788 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,788 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 15
2025-07-11 14:27:10,795 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,795 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,798 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,804 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,806 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=15
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 16
2025-07-11 14:27:10,820 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,820 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=16
2025-07-11 14:27:10,821 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,822 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,823 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,824 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,824 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,824 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,824 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,824 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 17
2025-07-11 14:27:10,834 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=17
2025-07-11 14:27:10,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,836 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 18
2025-07-11 14:27:10,848 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,848 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,849 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,849 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=18
2025-07-11 14:27:10,850 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,851 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,851 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,851 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,851 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,852 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 19
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=19
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,856 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,861 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,861 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,861 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 20
2025-07-11 14:27:10,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,872 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=20
2025-07-11 14:27:10,872 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,878 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,879 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,879 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,880 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,881 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,881 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,881 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,882 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 21
2025-07-11 14:27:10,888 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=21
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,891 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 22
2025-07-11 14:27:10,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,907 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=22
2025-07-11 14:27:10,907 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,912 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,912 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 23
2025-07-11 14:27:10,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=23
2025-07-11 14:27:10,920 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,923 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,924 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,924 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,924 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,924 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,924 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 24
2025-07-11 14:27:10,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,942 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,943 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=24
2025-07-11 14:27:10,945 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,946 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,947 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,948 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,948 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,949 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,950 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,950 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,950 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,950 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 25
2025-07-11 14:27:10,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=25
2025-07-11 14:27:10,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,953 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,953 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,954 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,954 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,954 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 26
2025-07-11 14:27:10,957 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,958 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=26
2025-07-11 14:27:10,959 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,960 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,961 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,961 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,962 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,962 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,963 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,964 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 27
2025-07-11 14:27:10,969 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:10,969 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:10,970 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,970 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=27
2025-07-11 14:27:10,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,972 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:10,974 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,976 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,977 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,977 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,978 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,980 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 28
2025-07-11 14:27:10,983 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,983 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=28
2025-07-11 14:27:10,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,985 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,985 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,985 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,986 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,986 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,987 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,987 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 29
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=29
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:10,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 30
2025-07-11 14:27:11,000 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,000 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,001 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,001 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=30
2025-07-11 14:27:11,001 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,002 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,002 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,002 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,004 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,004 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,005 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,007 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,009 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,011 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,012 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,013 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,014 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,014 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 31
2025-07-11 14:27:11,021 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,024 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,025 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=31
2025-07-11 14:27:11,025 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,026 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,028 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,027 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,030 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,032 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,033 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,033 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,034 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 32
2025-07-11 14:27:11,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,038 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,041 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,042 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=32
2025-07-11 14:27:11,043 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,043 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,044 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,045 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,045 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,046 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,046 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,047 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,048 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,048 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,049 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,050 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 33
2025-07-11 14:27:11,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,057 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=33
2025-07-11 14:27:11,058 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,060 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,060 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,061 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,061 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,062 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,063 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,064 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,064 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,065 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,065 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 34
2025-07-11 14:27:11,067 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,067 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=34
2025-07-11 14:27:11,068 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,069 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,069 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,070 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,070 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,070 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,072 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,072 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,073 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,074 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,074 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 35
2025-07-11 14:27:11,075 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,077 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=35
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,086 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,090 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,091 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,092 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,094 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 36
2025-07-11 14:27:11,106 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,108 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,111 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,113 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,113 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,114 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=36
2025-07-11 14:27:11,114 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,115 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,115 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,116 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,116 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,116 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,116 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,118 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,118 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,119 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,120 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,123 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 37
2025-07-11 14:27:11,126 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,126 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,126 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,130 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,140 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,140 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,141 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,142 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,143 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,143 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=37
2025-07-11 14:27:11,145 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,145 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,146 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,147 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,150 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,150 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,151 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,151 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,151 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 38
2025-07-11 14:27:11,157 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,158 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,158 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=38
2025-07-11 14:27:11,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,162 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,162 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,162 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,163 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,166 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,168 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,169 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,170 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 39
2025-07-11 14:27:11,170 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,171 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,174 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,175 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,175 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=39
2025-07-11 14:27:11,176 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,178 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,178 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,179 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,180 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,182 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,183 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,184 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,185 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,185 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 40
2025-07-11 14:27:11,188 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=40
2025-07-11 14:27:11,194 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,195 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,199 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,200 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,200 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,201 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,202 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,203 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,205 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,205 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,206 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,207 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,209 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,213 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,213 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 41
2025-07-11 14:27:11,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,218 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=41
2025-07-11 14:27:11,218 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,222 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,223 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,224 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 42
2025-07-11 14:27:11,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=42
2025-07-11 14:27:11,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,240 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,241 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,242 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,248 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 43
2025-07-11 14:27:11,251 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,252 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=43
2025-07-11 14:27:11,253 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,254 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,254 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,256 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,256 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,257 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,258 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,258 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,262 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,262 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,262 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 44
2025-07-11 14:27:11,262 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,274 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,276 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,277 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=44
2025-07-11 14:27:11,277 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,278 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,278 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,278 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,278 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,278 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,278 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,284 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,285 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,285 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,285 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,285 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 45
2025-07-11 14:27:11,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,287 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=45
2025-07-11 14:27:11,289 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,291 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,292 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,293 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,293 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,294 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,294 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,296 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 46
2025-07-11 14:27:11,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=46
2025-07-11 14:27:11,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,300 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,305 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,306 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,307 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 47
2025-07-11 14:27:11,308 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,309 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,312 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,315 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=47
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,317 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,321 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,326 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,328 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,329 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,330 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,331 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 48
2025-07-11 14:27:11,338 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,339 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,340 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,340 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=48
2025-07-11 14:27:11,342 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,343 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,343 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,343 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,344 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,346 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,347 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,348 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,349 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,350 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,350 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 49
2025-07-11 14:27:11,352 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,352 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=49
2025-07-11 14:27:11,352 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,353 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,353 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,353 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,353 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,353 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,354 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,354 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 50
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=50
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,357 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,363 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,366 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,366 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,367 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 51
2025-07-11 14:27:11,369 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,370 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=51
2025-07-11 14:27:11,370 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,372 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,373 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,374 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,375 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,375 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,375 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,375 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,375 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,379 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,379 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,379 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,382 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,383 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 52
2025-07-11 14:27:11,388 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=52
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,391 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,399 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,400 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,400 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 53
2025-07-11 14:27:11,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,405 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,405 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=53
2025-07-11 14:27:11,406 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,407 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,407 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,409 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,409 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,409 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,410 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,410 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,411 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,412 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,412 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,413 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,414 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,414 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 54
2025-07-11 14:27:11,421 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=54
2025-07-11 14:27:11,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,424 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,425 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,425 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,425 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,426 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,426 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,427 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,428 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,429 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,430 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,431 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 55
2025-07-11 14:27:11,433 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,434 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=55
2025-07-11 14:27:11,434 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,435 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,436 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,437 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,438 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,439 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,441 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,443 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 56
2025-07-11 14:27:11,444 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=56
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 57
2025-07-11 14:27:11,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=57
2025-07-11 14:27:11,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,454 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,455 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,455 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,456 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,456 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,458 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,459 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,460 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,461 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 58
2025-07-11 14:27:11,464 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,464 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=58
2025-07-11 14:27:11,465 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,467 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,467 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,467 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,469 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 59
2025-07-11 14:27:11,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,470 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=59
2025-07-11 14:27:11,474 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,474 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,476 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 60
2025-07-11 14:27:11,484 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,484 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=60
2025-07-11 14:27:11,484 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 61
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=61
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,495 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,497 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,498 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,499 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 62
2025-07-11 14:27:11,500 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,500 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,502 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,504 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,504 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,505 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=62
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,507 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,512 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,512 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,512 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 63
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=63
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,529 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,529 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,530 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,530 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,531 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,531 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,532 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 64
2025-07-11 14:27:11,533 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,534 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=64
2025-07-11 14:27:11,535 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,536 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,536 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,537 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,538 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 65
2025-07-11 14:27:11,539 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,542 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,542 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=65
2025-07-11 14:27:11,542 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,545 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,545 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,545 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,546 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,547 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,547 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,547 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,548 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,548 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 66
2025-07-11 14:27:11,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,548 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=66
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,562 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,564 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,565 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,565 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,566 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 67
2025-07-11 14:27:11,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,566 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,567 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,568 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=67
2025-07-11 14:27:11,569 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,571 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,572 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,572 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,574 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,579 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,579 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,579 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,579 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,580 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,582 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 68
2025-07-11 14:27:11,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=68
2025-07-11 14:27:11,583 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,584 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,584 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,584 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,584 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,585 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,585 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 69
2025-07-11 14:27:11,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,590 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=69
2025-07-11 14:27:11,590 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,593 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,593 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,594 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,594 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,595 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,596 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,596 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,598 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,599 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,600 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,600 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 70
2025-07-11 14:27:11,603 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=70
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,606 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,612 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,612 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,613 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,614 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,615 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,615 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 71
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=71
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,617 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 72
2025-07-11 14:27:11,622 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,624 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=72
2025-07-11 14:27:11,624 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,626 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,626 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,626 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,627 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,627 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,628 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,629 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,630 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,631 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,631 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,633 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,633 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,635 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 73
2025-07-11 14:27:11,636 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,639 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,640 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,640 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=73
2025-07-11 14:27:11,641 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,642 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,642 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,643 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,643 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,643 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,644 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,644 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,645 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,645 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 74
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=74
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,656 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,665 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,665 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,665 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,665 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 75
2025-07-11 14:27:11,669 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,669 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,670 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=75
2025-07-11 14:27:11,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,670 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,671 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,671 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,671 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,673 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,673 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,673 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,676 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,676 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,678 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,679 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,679 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,679 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,679 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 76
2025-07-11 14:27:11,685 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=76
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,686 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,687 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,687 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,688 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,689 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,690 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,692 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,693 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,693 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 77
2025-07-11 14:27:11,696 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,697 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=77
2025-07-11 14:27:11,699 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,700 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,700 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,701 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,701 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,701 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 78
2025-07-11 14:27:11,704 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,705 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,707 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,708 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,708 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=78
2025-07-11 14:27:11,709 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,711 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,712 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,712 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,713 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,714 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,714 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 79
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=79
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,723 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,727 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,727 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,728 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,728 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,729 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,730 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,730 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 80
2025-07-11 14:27:11,732 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,732 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=80
2025-07-11 14:27:11,732 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,733 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,733 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,734 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,734 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,734 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,734 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,735 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 81
2025-07-11 14:27:11,737 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,737 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,737 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=81
2025-07-11 14:27:11,738 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,742 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,742 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,743 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,744 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,745 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,747 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,748 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,748 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 82
2025-07-11 14:27:11,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=82
2025-07-11 14:27:11,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,751 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,751 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,751 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,751 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,752 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,752 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 83
2025-07-11 14:27:11,754 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,754 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=83
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,757 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 84
2025-07-11 14:27:11,768 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,768 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,770 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=84
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,773 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,779 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,779 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,779 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,779 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 85
2025-07-11 14:27:11,785 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,786 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,786 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=85
2025-07-11 14:27:11,786 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,786 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,787 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,787 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,787 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,787 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,790 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,793 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,794 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,795 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,795 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 86
2025-07-11 14:27:11,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=86
2025-07-11 14:27:11,802 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,803 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,803 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,803 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,803 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,804 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,804 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,804 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,804 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 87
2025-07-11 14:27:11,805 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,806 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,807 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,808 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,808 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,808 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=87
2025-07-11 14:27:11,811 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,811 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,812 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,814 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,814 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,815 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,815 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,815 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,815 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 88
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=88
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,823 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,828 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,828 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,828 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,829 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,831 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,832 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,832 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 89
2025-07-11 14:27:11,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,835 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,835 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=89
2025-07-11 14:27:11,835 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,837 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,837 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,837 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,838 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,838 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,839 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 90
2025-07-11 14:27:11,839 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,842 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,854 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,855 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,855 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=90
2025-07-11 14:27:11,856 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,857 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,857 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,857 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,857 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,861 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,861 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,861 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,864 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,864 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 91
2025-07-11 14:27:11,867 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,867 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=91
2025-07-11 14:27:11,868 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,868 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,869 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,869 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,869 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,869 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,870 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,870 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,871 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 92
2025-07-11 14:27:11,871 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,873 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,873 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,874 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,874 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,874 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=92
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,875 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,878 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,878 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,879 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,879 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,879 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 93
2025-07-11 14:27:11,888 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=93
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,890 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,896 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,897 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,899 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,899 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,899 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 94
2025-07-11 14:27:11,901 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,901 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,901 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=94
2025-07-11 14:27:11,901 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,902 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,902 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,902 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,902 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,905 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,906 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,907 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,909 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,909 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,910 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,911 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 95
2025-07-11 14:27:11,913 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,913 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=95
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 96
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=96
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,928 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,928 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,929 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,930 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,931 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,932 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,933 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,934 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 97
2025-07-11 14:27:11,934 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,937 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,938 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,939 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=97
2025-07-11 14:27:11,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,941 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,945 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,945 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,945 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 98
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=98
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,956 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,961 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,962 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,963 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,963 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,964 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:11,964 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,965 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 99
2025-07-11 14:27:11,965 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,967 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=99
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,967 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,971 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:11,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,972 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 100
2025-07-11 14:27:11,973 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,974 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,974 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:11,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:11,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:11,991 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=100
2025-07-11 14:27:11,991 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:11,993 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:11,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:11,994 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:11,994 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:11,995 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:11,996 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:11,997 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:11,998 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:11,998 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:11,999 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:11,999 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,001 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 101
2025-07-11 14:27:12,002 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,004 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,004 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=101
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,007 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,013 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,013 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,013 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 102
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=102
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,023 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,028 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,029 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,030 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,030 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,031 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 103
2025-07-11 14:27:12,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=103
2025-07-11 14:27:12,034 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,035 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,035 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,035 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,039 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,040 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,041 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,041 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,045 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,045 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 104
2025-07-11 14:27:12,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,055 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,056 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=104
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,057 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,061 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,061 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,062 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,062 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 105
2025-07-11 14:27:12,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=105
2025-07-11 14:27:12,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,066 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,067 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,067 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,067 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,067 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,067 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 106
2025-07-11 14:27:12,077 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,077 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,081 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,082 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=106
2025-07-11 14:27:12,082 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,083 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,083 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,083 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,083 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,083 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,084 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,084 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,084 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,085 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,085 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,085 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 107
2025-07-11 14:27:12,088 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,088 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=107
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,090 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 108
2025-07-11 14:27:12,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,102 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=108
2025-07-11 14:27:12,103 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,103 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,103 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,104 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,107 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,107 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,108 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,110 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,110 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,111 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,111 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,112 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,112 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,112 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 109
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=109
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,130 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,131 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,131 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,131 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,131 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 110
2025-07-11 14:27:12,137 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,138 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,138 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=110
2025-07-11 14:27:12,139 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,139 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,140 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,142 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,142 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,143 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,143 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,143 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,144 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,145 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,145 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,145 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,146 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 111
2025-07-11 14:27:12,148 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,148 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=111
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,149 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 112
2025-07-11 14:27:12,155 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,157 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=112
2025-07-11 14:27:12,158 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,159 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,159 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,159 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,160 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,160 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,161 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,161 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,163 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,164 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 113
2025-07-11 14:27:12,168 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=113
2025-07-11 14:27:12,171 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,174 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,174 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,174 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,180 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 114
2025-07-11 14:27:12,181 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,189 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,190 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=114
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,192 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,196 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,198 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,198 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,201 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,201 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 115
2025-07-11 14:27:12,203 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,203 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,204 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,204 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,205 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,205 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=115
2025-07-11 14:27:12,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,207 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,208 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,208 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,209 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,210 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,210 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,210 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,211 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,212 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 116
2025-07-11 14:27:12,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,215 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=116
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 117
2025-07-11 14:27:12,221 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,221 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,223 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=117
2025-07-11 14:27:12,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,225 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,230 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,231 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,231 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,233 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 118
2025-07-11 14:27:12,235 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,235 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,237 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=118
2025-07-11 14:27:12,239 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,240 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,240 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,241 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,241 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,243 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,243 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,244 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,245 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,245 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,246 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 119
2025-07-11 14:27:12,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,247 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=119
2025-07-11 14:27:12,248 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,248 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,249 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 120
2025-07-11 14:27:12,256 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,256 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,257 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=120
2025-07-11 14:27:12,257 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,258 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,258 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,259 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,259 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,259 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,260 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,261 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,261 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,261 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,262 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,263 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 121
2025-07-11 14:27:12,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=121
2025-07-11 14:27:12,266 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,268 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,268 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,269 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,269 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,269 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,270 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,270 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,270 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,271 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 122
2025-07-11 14:27:12,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,273 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,274 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,287 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,287 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=122
2025-07-11 14:27:12,287 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,289 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,290 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,290 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,291 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,292 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,295 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,297 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,298 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 123
2025-07-11 14:27:12,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,299 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=123
2025-07-11 14:27:12,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,300 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,301 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,301 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,302 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,302 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,303 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,304 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,305 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 124
2025-07-11 14:27:12,306 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,306 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,307 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,307 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=124
2025-07-11 14:27:12,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,309 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,310 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,310 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,310 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,311 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 125
2025-07-11 14:27:12,321 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,321 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=125
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,322 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,327 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,328 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,329 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,331 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 126
2025-07-11 14:27:12,331 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,331 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,333 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,339 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=126
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,341 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,346 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,347 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,347 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,347 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 127
2025-07-11 14:27:12,354 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,354 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=127
2025-07-11 14:27:12,356 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,358 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,358 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,358 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,358 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,358 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,362 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,362 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,363 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,364 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,364 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 128
2025-07-11 14:27:12,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,366 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,366 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=128
2025-07-11 14:27:12,366 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,369 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,369 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,369 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,370 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,370 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,370 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,370 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 129
2025-07-11 14:27:12,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,373 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=129
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 130
2025-07-11 14:27:12,390 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,390 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=130
2025-07-11 14:27:12,390 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,394 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,394 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,394 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,395 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,395 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,397 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,397 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,398 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,399 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,401 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,401 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,402 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 131
2025-07-11 14:27:12,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,404 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=131
2025-07-11 14:27:12,406 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,408 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,408 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,409 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,409 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,410 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,410 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,411 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 132
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=132
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,412 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 133
2025-07-11 14:27:12,423 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,423 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,425 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=133
2025-07-11 14:27:12,425 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,426 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,427 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,427 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,428 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,429 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,430 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,430 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,431 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,432 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,433 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,433 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,434 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 134
2025-07-11 14:27:12,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=134
2025-07-11 14:27:12,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,438 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,438 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,439 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,441 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 135
2025-07-11 14:27:12,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,444 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=135
2025-07-11 14:27:12,444 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,445 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,445 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,446 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,446 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,447 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,448 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,448 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 136
2025-07-11 14:27:12,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=136
2025-07-11 14:27:12,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,453 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,453 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,453 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 137
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=137
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 138
2025-07-11 14:27:12,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,466 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=138
2025-07-11 14:27:12,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,467 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,467 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,468 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,468 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,468 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,469 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,469 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,470 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,470 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 139
2025-07-11 14:27:12,473 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,475 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=139
2025-07-11 14:27:12,477 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,478 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,479 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,479 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,479 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,479 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,483 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,484 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,484 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,485 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 140
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=140
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,489 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,495 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,496 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,496 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 141
2025-07-11 14:27:12,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,507 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,507 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=141
2025-07-11 14:27:12,507 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,507 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,511 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,511 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,511 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,512 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,512 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,513 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,513 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,514 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,515 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,515 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,515 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 142
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=142
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,518 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,520 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,520 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,520 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,520 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 143
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=143
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,523 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,528 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,528 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,529 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,529 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,529 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 144
2025-07-11 14:27:12,536 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,536 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,537 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,538 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=144
2025-07-11 14:27:12,538 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,539 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,540 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,540 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,541 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,542 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,542 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,542 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,542 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,542 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,545 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,546 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,546 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 145
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=145
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,556 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,561 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,561 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,561 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,561 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,562 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,563 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,564 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,565 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 146
2025-07-11 14:27:12,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,568 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=146
2025-07-11 14:27:12,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,569 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,570 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,570 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 147
2025-07-11 14:27:12,572 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,572 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,573 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,574 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=147
2025-07-11 14:27:12,574 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,577 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,577 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,581 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,582 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,582 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 148
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=148
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,589 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,594 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,594 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,594 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,595 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,596 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,598 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,599 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 149
2025-07-11 14:27:12,601 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,601 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=149
2025-07-11 14:27:12,602 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,602 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,603 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,603 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,603 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,604 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,604 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,604 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,605 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 150
2025-07-11 14:27:12,606 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,610 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,610 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,610 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,610 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=150
2025-07-11 14:27:12,611 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,611 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,611 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,612 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,612 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,613 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,614 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,614 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,614 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,614 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,615 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 151
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=151
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,623 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,628 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,629 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,630 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,631 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,631 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 152
2025-07-11 14:27:12,633 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,633 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=152
2025-07-11 14:27:12,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,634 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,635 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,635 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,635 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,636 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,636 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,636 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 153
2025-07-11 14:27:12,637 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,639 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=153
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,649 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,650 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,650 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,650 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,650 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,651 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,651 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,651 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,652 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 154
2025-07-11 14:27:12,654 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,656 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=154
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,657 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 155
2025-07-11 14:27:12,664 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,664 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,665 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=155
2025-07-11 14:27:12,666 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,666 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,666 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,667 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,667 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,667 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,667 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,668 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,668 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,669 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,669 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,670 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,670 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,670 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 156
2025-07-11 14:27:12,671 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,672 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,674 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=156
2025-07-11 14:27:12,676 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,677 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 157
2025-07-11 14:27:12,693 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,693 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,694 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=157
2025-07-11 14:27:12,694 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,695 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,695 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,695 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,696 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,696 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,696 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,697 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,697 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,697 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,698 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,698 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,699 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,699 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 158
2025-07-11 14:27:12,700 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,701 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,701 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=158
2025-07-11 14:27:12,701 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,702 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,702 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,702 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,703 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,703 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,703 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,704 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 159
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=159
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,715 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,720 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,720 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,721 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,721 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,722 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 160
2025-07-11 14:27:12,731 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,731 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,734 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=160
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,734 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,738 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,740 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,741 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,741 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,743 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,743 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,744 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,745 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,746 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 161
2025-07-11 14:27:12,749 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,749 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=161
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,750 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,755 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,756 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 162
2025-07-11 14:27:12,765 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,766 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,767 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,767 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=162
2025-07-11 14:27:12,767 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,768 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,768 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,768 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,769 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,769 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,774 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,775 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,776 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,777 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,778 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 163
2025-07-11 14:27:12,781 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,781 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=163
2025-07-11 14:27:12,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,782 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,782 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,783 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,783 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,783 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 164
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,784 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,787 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,787 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=164
2025-07-11 14:27:12,792 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,793 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,793 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,794 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,794 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,794 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,795 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,795 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 165
2025-07-11 14:27:12,797 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,797 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=165
2025-07-11 14:27:12,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,798 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,798 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,799 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,799 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,800 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,800 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,800 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,800 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 166
2025-07-11 14:27:12,801 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,802 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,814 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,815 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=166
2025-07-11 14:27:12,816 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,816 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,816 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,817 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,817 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,817 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,817 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,817 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 167
2025-07-11 14:27:12,819 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,819 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,820 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=167
2025-07-11 14:27:12,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,820 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,821 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,822 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,824 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,824 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,825 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,825 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,826 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,827 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,828 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,831 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,833 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 168
2025-07-11 14:27:12,834 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,836 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=168
2025-07-11 14:27:12,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,837 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,838 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,838 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,838 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,838 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,839 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,840 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,840 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,841 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,841 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,841 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 169
2025-07-11 14:27:12,843 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,844 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=169
2025-07-11 14:27:12,846 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,848 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,848 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,849 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,850 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,850 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 170
2025-07-11 14:27:12,853 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,853 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=170
2025-07-11 14:27:12,853 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,854 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,854 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,854 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,855 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,856 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,856 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,857 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,857 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 171
2025-07-11 14:27:12,857 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,858 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,858 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,858 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,860 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,861 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=171
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,862 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 172
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=172
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,872 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,876 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,877 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,878 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,878 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,878 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 173
2025-07-11 14:27:12,888 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,888 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=173
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,889 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,892 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,892 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,892 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,892 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 174
2025-07-11 14:27:12,904 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,905 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,906 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,906 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,907 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=174
2025-07-11 14:27:12,907 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,908 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,908 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,913 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,914 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 175
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=175
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,922 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,926 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,926 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,927 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,927 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,927 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 176
2025-07-11 14:27:12,938 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,939 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,940 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,940 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=176
2025-07-11 14:27:12,940 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,941 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,941 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,941 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,942 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,942 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,942 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,942 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,942 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,944 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,945 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,947 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 177
2025-07-11 14:27:12,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,951 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=177
2025-07-11 14:27:12,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,952 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,953 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,953 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,954 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 178
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=178
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,956 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 179
2025-07-11 14:27:12,971 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,971 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,972 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:12,973 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=179
2025-07-11 14:27:12,973 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,973 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:12,973 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,974 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,974 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,974 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,975 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,975 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:12,976 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,977 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,980 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,981 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,982 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,982 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 180
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=180
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:12,984 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 181
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=181
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:12,989 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:12,993 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:12,993 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:12,993 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 182
2025-07-11 14:27:13,004 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,004 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,006 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,008 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,008 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,008 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=182
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,009 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,011 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,012 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,012 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,013 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 183
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=183
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,022 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,030 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,031 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,031 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 184
2025-07-11 14:27:13,035 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,035 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,037 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,037 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,038 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,038 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=184
2025-07-11 14:27:13,038 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,039 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,039 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,039 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,039 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,042 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,043 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,043 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,043 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,043 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 185
2025-07-11 14:27:13,054 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,054 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,055 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=185
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,056 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,059 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,060 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,060 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,060 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,060 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 186
2025-07-11 14:27:13,069 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,069 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,069 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,069 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,071 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,072 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,073 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,073 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=186
2025-07-11 14:27:13,073 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,074 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,075 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,075 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,076 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,076 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,076 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,076 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,076 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 187
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=187
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,089 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,096 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,097 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,098 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,098 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 188
2025-07-11 14:27:13,101 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,101 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=188
2025-07-11 14:27:13,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,102 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,103 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,103 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,103 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,104 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,104 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,106 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,106 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,107 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,107 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 189
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=189
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,122 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,127 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,129 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,130 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,131 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,132 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 190
2025-07-11 14:27:13,134 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,134 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=190
2025-07-11 14:27:13,135 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,135 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,136 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,136 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,136 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,136 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,137 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,137 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,138 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,138 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,138 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,139 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,140 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,141 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 191
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=191
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,144 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 192
2025-07-11 14:27:13,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,154 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,154 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,155 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=192
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,156 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,159 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,161 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,162 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,163 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,163 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 193
2025-07-11 14:27:13,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,165 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,165 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=193
2025-07-11 14:27:13,165 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,169 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,169 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,170 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,170 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,170 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,170 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,170 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,171 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,171 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,172 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,173 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,174 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 194
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=194
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,176 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 195
2025-07-11 14:27:13,188 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,188 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,189 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=195
2025-07-11 14:27:13,190 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,190 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,190 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,191 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,191 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,192 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,193 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,193 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,195 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,198 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,199 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,201 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,201 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 196
2025-07-11 14:27:13,202 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,205 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,205 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,206 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=196
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,207 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,211 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,214 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,215 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,216 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,217 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 197
2025-07-11 14:27:13,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=197
2025-07-11 14:27:13,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,219 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,221 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,222 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,223 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,223 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,224 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,225 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,225 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,226 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,226 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,226 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 198
2025-07-11 14:27:13,226 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,226 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,232 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,233 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=198
2025-07-11 14:27:13,234 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,234 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,235 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,235 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,235 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,235 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,236 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 199
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=199
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,238 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,243 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,243 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,245 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,245 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,245 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 200
2025-07-11 14:27:13,258 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,258 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,261 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=200
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,261 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,265 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,266 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,266 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,266 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,266 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 201
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=201
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,272 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,275 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,275 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,275 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,279 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,280 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,280 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,280 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,280 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 202
2025-07-11 14:27:13,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,285 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,285 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=202
2025-07-11 14:27:13,285 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,286 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,286 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,286 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,287 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,287 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,288 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,289 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,289 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 203
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=203
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,292 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 204
2025-07-11 14:27:13,302 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,302 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=204
2025-07-11 14:27:13,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,303 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,303 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,304 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,304 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,305 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,305 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,306 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,307 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,307 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,308 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,308 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 205
2025-07-11 14:27:13,309 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,309 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,310 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=205
2025-07-11 14:27:13,313 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 206
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=206
2025-07-11 14:27:13,314 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,320 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,320 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,320 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,320 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,320 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,321 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,321 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 207
2025-07-11 14:27:13,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,322 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,324 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,324 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=207
2025-07-11 14:27:13,326 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,328 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,330 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,332 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,332 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,333 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,333 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,333 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 208
2025-07-11 14:27:13,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,337 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,337 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,338 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,338 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,339 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,340 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,341 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,341 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=208
2025-07-11 14:27:13,344 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,345 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,345 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,349 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,349 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,350 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,350 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 209
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=209
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,355 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,360 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,362 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,362 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,362 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,362 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,362 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 210
2025-07-11 14:27:13,369 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,369 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,371 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,371 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,372 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=210
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,372 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,378 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,378 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,378 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 211
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=211
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,389 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,393 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,394 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,395 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,396 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,396 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 212
2025-07-11 14:27:13,403 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,403 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,404 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=212
2025-07-11 14:27:13,404 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,406 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,406 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,408 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,409 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,409 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,409 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 213
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=213
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,422 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,427 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,428 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 214
2025-07-11 14:27:13,433 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,434 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=214
2025-07-11 14:27:13,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,435 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,436 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,436 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,436 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,437 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,437 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 215
2025-07-11 14:27:13,439 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,439 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,441 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,447 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 255
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 루프 반복
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=215
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - frame_queue.get 성공, frame type: <class 'numpy.ndarray'>
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,448 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame 갱신
2025-07-11 14:27:13,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,449 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - last_frame is not None, imshow 시도
2025-07-11 14:27:13,449 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,450 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,450 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,450 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,450 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue.put_nowait 성공
2025-07-11 14:27:13,451 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 216
2025-07-11 14:27:13,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer 루프 반복, frame_count=216
2025-07-11 14:27:13,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 키 입력: 113
2025-07-11 14:27:13,453 - app                       - INFO     - [진단] app.py: run - async_frame_producer - get_frame() 반환값: <class 'numpy.ndarray'>, shape: (480, 640, 3)
2025-07-11 14:27:13,453 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - 'q' 입력, stop_event.set() 및 break
2025-07-11 14:27:13,454 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results: {'face': None, 'pose': None, 'hand': None, 'object': None}
2025-07-11 14:27:13,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - mediapipe_results 있음, 어노테이션 시도
2025-07-11 14:27:13,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results 진입
2025-07-11 14:27:13,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - frame type: <class 'numpy.ndarray'>, mediapipe_results type: <class 'dict'>
2025-07-11 14:27:13,457 - app                       - INFO     - [진단] app.py: _annotate_frame_with_results - mediapipe_results가 None 또는 비어있음, 원본 프레임 반환
2025-07-11 14:27:13,457 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,466 - app                       - INFO     - [진단] app.py: run - async_frame_producer - frame_count 증가: 217
2025-07-11 14:27:13,468 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,468 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,468 - app                       - INFO     - [진단] app.py: run - opencv_display_loop - OpenCV 창 종료
2025-07-11 14:27:13,471 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,471 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 루프 끝, 다음 반복
2025-07-11 14:27:13,501 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,501 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,503 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,540 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,542 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,544 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,565 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,565 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
2025-07-11 14:27:13,568 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread 루프 반복: stopped=False, cap_opened=True
2025-07-11 14:27:13,591 - app                       - INFO     - [진단] app.py: run - async_frame_producer - 종료 시 frame_queue 가득참 (queue.Full)
2025-07-11 14:27:13,593 - events.event_bus          - INFO     - MEDIUM 우선순위 큐 처리 취소됨
2025-07-11 14:27:13,594 - events.event_bus          - INFO     - EMERGENCY 우선순위 큐 처리 취소됨
2025-07-11 14:27:13,595 - events.event_bus          - INFO     - LOW 우선순위 큐 처리 취소됨
2025-07-11 14:27:13,595 - events.event_bus          - INFO     - HIGH 우선순위 큐 처리 취소됨
2025-07-11 14:27:13,595 - events.event_bus          - INFO     - CRITICAL 우선순위 큐 처리 취소됨
2025-07-11 14:27:13,596 - app                       - INFO     - [진단] app.py: run - asyncio.run(async_frame_producer()) 완료
2025-07-11 14:27:13,596 - app                       - INFO     - [진단] app.py: run - stop_event.set() 호출
2025-07-11 14:27:13,597 - app                       - INFO     - [진단] app.py: run - display_thread.join() 완료
2025-07-11 14:27:13,601 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread cap.read(): ret=True, frame type=<class 'numpy.ndarray'>, shape=(480, 640, 3)
2025-07-11 14:27:13,602 - io_handler.video_input    - INFO     - [진단] video_input._reader_thread self.current_frame 갱신: shape=(480, 640, 3)
